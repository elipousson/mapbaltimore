[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Eli Pousson Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/extdata_cachedata.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"External, cached, and remote data sources","text":"data mapbaltimore loaded first load package. reason large spatial data sets can take long time load slow environment loaded active memory. GitHub also maximum file size 100 megabytes. data sets rarely updated, others regularly updated—making data included package potentially outdated. mapbaltimore works around issues different ways: Storing large (<100 MB) data sets geopackage (.gpkg) files inst/extdata folder Caching large (>100 MB) data sets geopackage files cache folder selected using rappdirs::user_cache_dir() function Offering functions download spatial data remote sources including city state ArcGIS servers, state open data portal, Open Street Map external cached data sources never fully loaded active memory. Instead, mapbaltimore uses wkt_filter parameter sf::st_read() function described post Working Large Spatial Data R Rob Williams import data need. Continue reading explore three different data access options work within package.","code":"library(mapbaltimore) library(ggplot2)  set_map_theme()"},{"path":"/articles/extdata_cachedata.html","id":"external-data-sources","dir":"Articles","previous_headings":"","what":"External data sources","title":"External, cached, and remote data sources","text":"Currently, external data sources include: Trees (also available Tree Baltimore website) Unimproved property (subset cached real property data) Vegetated areas data can accessed using extdata parameter get_area_data function following examples illustrate.   Incomplete documentation external datasets included extdata.R file documentation exported accessed directly via help menu.","code":"# Get trees in the Oliver neighborhood oliver_trees <- get_area(type = \"neighborhood\", area_name = \"Oliver\") %>%  get_area_data(extdata = \"trees\") #> Reading layer `trees' from data source  #>   `/private/var/folders/3f/50m42dx1333_dfqb5772j6_40000gn/T/RtmpW2uV1G/temp_libpath1377d5a085f8a/mapbaltimore/extdata/trees.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 1067 features and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 434147.3 ymin: 181822.2 xmax: 434972.5 ymax: 182735.6 #> Projected CRS: NAD83(HARN) / Maryland  # Show the top 6 species pluralis (spp) by number oliver_trees %>%    sf::st_drop_geometry() %>%    dplyr::count(spp, sort = TRUE, name = \"count\") %>%    dplyr::slice_head(n = 6) %>%    knitr::kable() # Plot tree locations sized by diameter at breast height (dbh) oliver_trees %>%    ggplot() +   geom_sf(aes(size = dbh, color = condition), alpha = 0.5) druidhill <- get_area(type = \"neighborhood\", area_name = \"Druid Hill Park\")  get_area_data(area = druidhill, extdata = \"vegetated_area\") %>%    ggplot() +   geom_sf(fill = \"darkgreen\", alpha = 0.5) +   layer_area_mask(area = druidhill, alpha = 0.5, fill = \"white\", color = NA, dist = 5) #> Reading layer `vegetated_area' from data source  #>   `/private/var/folders/3f/50m42dx1333_dfqb5772j6_40000gn/T/RtmpW2uV1G/temp_libpath1377d5a085f8a/mapbaltimore/extdata/vegetated_area.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 182 features and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 429440.2 ymin: 182795.9 xmax: 432629.7 ymax: 185069.4 #> Projected CRS: NAD83(HARN) / Maryland"},{"path":"/articles/extdata_cachedata.html","id":"cached-data-sources","dir":"Articles","previous_headings":"","what":"Cached data sources","title":"External, cached, and remote data sources","text":"first install mapbaltimore, want run cache_mapbaltimore_data parameters access real property data, edge pavement data, streets outside Baltimore City. Customizing cache location coordinate reference system possible recommended. Downloading data takes long time takes around around 700 MB three files cached. update cached files, use overwrite = TRUE parameter. recommend overwriting individual data sets rather cached data sets real_property data set one require occasional updates. data cached, can always accessed using cache_data parameter get_area_data().  map_area_property() function requires cached real property data work without . functions layer_area_streets() use optional parameter determine whether use city streets data cached baltimore_msa_streets data. Maps show area near crossing city boundaries show much better full data can used.","code":"# cache_mapbaltimore_data() # cache_real_property(overwrite = TRUE) get_area(type = \"neighborhood\", area_name = \"Federal Hill\") %>%    get_area_data(data = \"edge_of_pavement\") %>%    ggplot() +   geom_sf(color = \"grey50\") #> Reading layer `edge_of_pavement' from data source  #>   `/Users/elipousson/Library/Caches/mapbaltimore/edge_of_pavement.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 481 features and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 433023.3 ymin: 178513.8 xmax: 434164.2 ymax: 179718.8 #> Projected CRS: NAD83(HARN) / Maryland get_area(type = \"neighborhood\", area_name = \"Morgan Park\") %>%  map_area_property(property = \"principal residence\",                   show_mask = TRUE) second_district <- get_area(type = \"congressional district\", area_name = \"2nd District\")  district_map <- ggplot() +   geom_sf(data = second_district, fill = \"springgreen\", alpha = 0.2)  # If msa = FALSE, layer_area_streets uses the city streets data district_map + layer_area_streets(area = second_district, sha_class = c(\"INT\", \"FWY\"))    # If msa = TRUE, layer_area_streets uses the cached baltimore_msa_streets data district_map +   layer_area_streets(area = second_district, sha_class = c(\"INT\", \"FWY\"), msa = TRUE)"},{"path":"/articles/extdata_cachedata.html","id":"remote-data-sources","dir":"Articles","previous_headings":"","what":"Remote data sources","title":"External, cached, and remote data sources","text":"externally stored cached data access remotely whenever needed large file size makes keeping local version much faster. data frequently updated (less frequently used), downloading data whenever needed likely preferable. example, get_area_esri_data() can take url ArcGIS MapServer FeatureServer take type parameter corresponds MapServer FeatureServer url Open Baltimore, Maryland iMap, Maryland Food System Map. list urls currently internal system data opened package users future. get_area_osm_data wraps osmdata package largely simplify experience using package. Open Street Map particularly useful accessing data may available non-commercial sources, location bowling alleys Baltimore City County. aware Open Street Map license requires credit time use OSM data.  Lastly, get_maryland_open_resource() can used access data Socrata-based Maryland Open Data portal wrapping RSocrata::read.socrata() function. get_area_crashes function calls get_maryland_open_resource() using appropriate identifier table vehicular crashes.","code":"north <- get_area(type = \"planning district\", area_id = \"North\")  ggplot() +   layer_area_streets(area = north, sha_class = c(\"PART\", \"MART\")) +   geom_sf(data = get_area_esri_data(area = north, type = \"red light cameras\"),           fill = \"red\", shape = 21, size = 4, color = \"black\") +   geom_sf(data = get_area_esri_data(area = north, type = \"fixed speed cameras\"), fill = \"yellow\", shape = 25, size = 2, color = \"black\") baltimore_county <- dplyr::filter(baltimore_msa_counties, namelsad == \"Baltimore County\")  baltimore_county %>%    get_area_osm_data(key = \"leisure\",                 value = \"bowling_alley\",                 trim = TRUE,                 crs = 2804) %>%    dplyr::filter(!is.na(name)) %>%    ggplot() +   geom_sf(data = baltimore_msa_counties, color = \"grey30\", fill = NA) +   ggrepel::geom_label_repel(aes(fill = name, label = name, geometry = geometry), stat = \"sf_coordinates\", force = 10, color = \"white\") +     set_map_limits(area = baltimore_county) +   guides(fill = \"none\") +   labs(caption = \"Data courtesy Open Street Map.\") #> Open Street Map data is available under the Open Database Licence which requires attribution. See https://www.openstreetmap.org/copyright for more information. charles_north <- get_area(type = \"neighborhood\", area_name = \"Charles North\")  charles_north %>%  get_area_crashes(geometry = TRUE, trim = TRUE) %>%    ggplot() +   layer_area_streets(area = charles_north) +   geom_sf(color = \"orangered\", alpha = 0.75, size = 2.5) +   geom_sf(data = charles_north, color = \"black\", fill = NA, size = 2, linetype = \"dashed\")"},{"path":"/articles/get_area.html","id":"get-areas","dir":"Articles","previous_headings":"","what":"Get areas","title":"Get areas and data to layer on a map","text":"get_area function uses dplyr::filter() select one areas specified type political administrative geography. can select one seven different types: Neighborhoods Baltimore City Council districts Maryland state legislative districts U.S. Congressional districts include Baltimore City Baltimore City Planning Districts Baltimore City Police Districts Baltimore City Community Statistical Areas","code":""},{"path":"/articles/get_area.html","id":"get-areas-by-name-or-id","dir":"Articles","previous_headings":"Get areas","what":"Get areas by name or id","title":"Get areas and data to layer on a map","text":"can review names (name) identifiers (id) type area looking corresponding column data. Typically, name column also work label area id column used unique identifier. names require exact match. example, get_area(type = \"neighborhood\", area_name = \"Washington Village/Pigtown\") works get_area(type = \"neighborhood\", area_name = \"Pigtown\") return error.","code":"# Show the first 3 council district names council_districts$name[1:3] #> [1] \"District 8\" \"District 7\" \"District 6\"  # Get district 8 by name get_area(   type = \"council district\",   area_name = \"District 8\" ) %>%   map_area(\"name\") # Show the first 3 council district ids council_districts$id[1:3] #> [1] \"8\" \"7\" \"6\"  # Get district 7 by id get_area(   type = \"council district\",   area_id = 7 ) %>%   map_area(\"id\")"},{"path":"/articles/get_area.html","id":"get-multiple-areas","dir":"Articles","previous_headings":"Get areas","what":"Get multiple areas","title":"Get areas and data to layer on a map","text":"return multiple areas, can provide vector names identifiers.  can also combine multiple areas single simple feature using union parameter. helpful want get data multiple neighborhoods time map single combined area. default area names concatenated using ampersand separator, however, length combined names difficult fit map often better replace name shorter alternative.","code":"area_multiple <- get_area(   type = \"neighborhood\",   area_name = c(\"Mount Vernon\", \"Mid-Town Belvedere\", \"Seton Hill\") )  area_multiple %>%   map_area(\"name\") area_multiple_union <- get_area(   type = \"neighborhood\",   area_name = c(\"Mount Vernon\", \"Mid-Town Belvedere\", \"Seton Hill\"),   union = TRUE )  area_multiple_union$name #> [1] \"Mid-Town Belvedere, Mount Vernon, and Seton Hill\"  area_multiple_union$name <- \"Mount Vernon area\"  area_multiple_union %>%   map_area(\"name\")"},{"path":"/articles/get_area.html","id":"get-data-for-an-area","dir":"Articles","previous_headings":"","what":"Get data for an area","title":"Get areas and data to layer on a map","text":"get_area_data() function offers great deal flexibility. can provide area get_area() simple feature polygon multipolygon located within Baltimore City (region using cached baltimore_msa_streets data set). can also provide bounding box created sf::st_bbox() function. illustrate options function, ’m getting downtown neighborhood simple feature object (area) making list ggplot2 layers, guide, scale (area_layer) reuse example maps section.","code":"area <- get_area(   type = \"neighborhood\",   area_name = \"Downtown\" )  area_layer <- list(   geom_sf(data = area, fill = \"grey90\", alpha = 0.8, color = \"grey20\", linetype = \"dotted\"),   geom_sf_label(data = area, aes(label = name)),   guides(fill = \"none\"),   scale_fill_viridis_d() )"},{"path":"/articles/get_area.html","id":"adjust-the-area-bounding-box","dir":"Articles","previous_headings":"Get data for an area","what":"Adjust the area bounding box","title":"Get areas and data to layer on a map","text":"order place area context, may want portion data surrounding area function returns data within bounding box area default. dimensions bounding box can adjusted using dist, diag_ratio, asp parameters. can access adjustments directly using buffer_area(), adjust_bbox_asp(), adjust_bbox() functions. functions used illustrate work use corresponding parameters get_area_data(). dist parameter passed sf::st_buffer() function used set buffer meters area. diag_ratio also used set buffer distances number represents proportion diagonal distance area bounding box. helpful set ratio scale proportion size area.  asp parameter applied buffers applied. adjust_bbox_asp() function accepts either number, e.g. 1.5, string format commonly used aspect ratios, e.g. “6:4”. example shows extent square bounding box buffered downtown areas created .","code":"example_dist <- 50 example_diag_ratio <- 0.25  # 50 meter buffer area_dist <- buffer_area(area, dist = example_dist) area_dist_bbox <- area_dist %>%   sf::st_bbox() %>%   sf::st_as_sfc() %>%   sf::st_as_sf()  # buffer 1/4 (0.25) of the diagonal distance of the bounding box area_diag_ratio <- buffer_area(area, diag_ratio = example_diag_ratio) area_diag_ratio_bbox <- area_diag_ratio %>%   sf::st_bbox() %>%   sf::st_as_sfc() %>%   sf::st_as_sf()  ggplot() +   geom_sf(data = area_dist, fill = \"purple\", alpha = 0.1) +   geom_sf(data = area_dist_bbox, color = \"purple\", fill = NA) +   geom_sf(data = area_diag_ratio, fill = \"darkorange\", alpha = 0.1) +   geom_sf(data = area_diag_ratio_bbox, color = \"darkorange\", fill = NA) +   area_layer example_asp <- \"1:1\"  area_dist_asp <- adjust_bbox_asp(area_dist, asp = example_asp) %>%   sf::st_as_sfc() %>%   sf::st_as_sf()  area_diag_ratio_asp <- adjust_bbox_asp(area_diag_ratio, asp = example_asp) %>%   sf::st_as_sfc() %>%   sf::st_as_sf()  ggplot() +   geom_sf(data = area_dist_asp, fill = \"purple\", color = \"purple\", alpha = 0.1) +   geom_sf(data = area_diag_ratio_asp, fill = \"darkorange\", color = \"darkorange\", alpha = 0.1) +   area_layer"},{"path":"/articles/get_area.html","id":"cropping-and-trimming-data","dir":"Articles","previous_headings":"Get data for an area","what":"Cropping and trimming data","title":"Get areas and data to layer on a map","text":"Finally, area adjustments work combination get_area_data() function. default, data cropped bounding box provided area:  data diag_ratio buffer:  data using asp adjustment return square :  can also avoid cropping want return full extent data even partially overlaps area bounding box. example, example crop = FALSE.  want use crop = FALSE combination area adjustment parameters must either supply bounding box instead area adjust area using buffer_area() passing get_area_data() function. maps similar enough prior example ’ve hid results provided code sample. Depending type data working , may also want trim data area using sf::st_intersection() function. can’t trim area provide bounding box (bbox); must provide area.  Similar crop, using trim = TRUE parameter ignores distance adjustments work around can used apply buffer area passing get_area_data().  trim parameter also supported get_area_esri_data() get_area_osm_data() functions discussed detail article external, cached, remote data sources.","code":"get_area_data(   area = area,   data = council_districts ) %>%   map_area(\"name\") +   area_layer get_area_data(   area = area,   data = council_districts,   diag_ratio = example_diag_ratio ) %>%   map_area(\"name\") +   area_layer get_area_data(   area = area,   data = council_districts,   asp = example_asp ) %>%   map_area(\"name\") +   area_layer get_area_data(   area = area,   data = council_districts,   crop = FALSE ) %>%   map_area(\"name\") +   area_layer get_area_data(   area = buffer_area(area, diag_ratio = example_diag_ratio),   data = council_districts,   crop = FALSE )  get_area_data(   bbox = sf::st_bbox(area),   data = council_districts,   diag_ratio = example_diag_ratio,   crop = FALSE ) area_trees <- get_area_data(   bbox = sf::st_bbox(area),   extdata = \"trees\",   dist = example_dist ) #> Reading layer `trees' from data source  #>   `/private/var/folders/3f/50m42dx1333_dfqb5772j6_40000gn/T/RtmpW2uV1G/temp_libpath1377d5a085f8a/mapbaltimore/extdata/trees.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 1675 features and 15 fields (with 1 geometry empty) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 432400.8 ymin: 179937.8 xmax: 434147.1 ymax: 180891.7 #> Projected CRS: NAD83(HARN) / Maryland  area_trees_trimmed <- get_area_data(   area = area,   extdata = \"trees\",   dist = example_dist,   trim = TRUE ) #> Reading layer `trees' from data source  #>   `/private/var/folders/3f/50m42dx1333_dfqb5772j6_40000gn/T/RtmpW2uV1G/temp_libpath1377d5a085f8a/mapbaltimore/extdata/trees.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 1675 features and 15 fields (with 1 geometry empty) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 432400.8 ymin: 179937.8 xmax: 434147.1 ymax: 180891.7 #> Projected CRS: NAD83(HARN) / Maryland  ggplot() +   area_layer +   geom_sf(data = area_trees, color = \"wheat3\") +   geom_sf(data = area_trees_trimmed, color = \"forestgreen\", alpha = 0.8) area_trees_trimmed_diag_ratio <- get_area_data(   area = buffer_area(area, diag_ratio = example_diag_ratio),   extdata = \"trees\",   trim = TRUE ) #> Reading layer `trees' from data source  #>   `/private/var/folders/3f/50m42dx1333_dfqb5772j6_40000gn/T/RtmpW2uV1G/temp_libpath1377d5a085f8a/mapbaltimore/extdata/trees.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 5462 features and 15 fields (with 2 geometries empty) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431984 ymin: 179521.7 xmax: 434562.3 ymax: 181305.6 #> Projected CRS: NAD83(HARN) / Maryland  ggplot() +   area_layer +   geom_sf(data = area_trees_trimmed_diag_ratio, color = \"forestgreen\") +   geom_sf(data = area_trees_trimmed, color = \"wheat3\")"},{"path":"/articles/get_area.html","id":"layering-data-in-area-maps","dir":"Articles","previous_headings":"","what":"Layering data in area maps","title":"Get areas and data to layer on a map","text":"may wondering parameters may useful. layer_area_data() function combines get_area_data() ggplot2::geom_sf() quickly turn data mapbaltimore ggplot maps. simple example turns streets parks data map downtown area.  Like ggplot2::geom_sf(), layer_area_data() can inherit data ggplot() allows users set aesthetics using mapping parameter. ggplot2 objects scales, labels, guides can combined data layer providing list layer_after parameter. show_area option also provides convenient way overlay boundaries area area_aes parameter allows passed custom fixed aesthetics area layer. following example showing BCPSS elementary school attendance zones around downtown illustrates parameters work.  want use data one remote data functions, can set asis parameter TRUE indicating data already matched area require additional adjustments. example, following example shows create new map layer using data imported Open Street Map.  can also use url parameter passed get_area_esri_data add data ArcGIS MapServer FeatureServer. local shapefile can imported using path parameter.  Finally, can apply additional function data using lambda syntax used purrr. example, tree data includes dead trees removed displaying map.","code":"example_diag_ratio <- 0.05  layer_streets <- layer_area_data(   area = area,   data = streets,   color = \"gray60\",   diag_ratio = example_diag_ratio )  layer_parks <- layer_area_data(   area = area,   data = parks,   fill = \"forestgreen\",   diag_ratio = example_diag_ratio )  background_layers <- list(layer_streets, layer_parks)  ggplot() +   background_layers ggplot() +   layer_area_data(     data = bcps_zones,     area = area,     mapping = aes(fill = program_name),     diag_ratio = 0.25,     asp = example_asp,     show_area = TRUE,     area_aes = list(color = \"white\", linetype = \"dotted\", size = 1.25),     layer_after = list(       scale_fill_viridis_d(),       labs(fill = \"Zoning category\")     )   ) layer_area_buildings <- layer_area_data(   data = get_area_osm_data(     area = area,     diag_ratio = example_diag_ratio,     key = \"building\",     value = \"yes\"   ),   asis = TRUE,   fill = \"antiquewhite2\",   color = NA,   alpha = 1,   layer_after = labs(caption = \"© OpenStreetMap contributors\") ) #> Warning: attribute variables are assumed to be spatially constant throughout all #> geometries #> Open Street Map data is available under the Open Database Licence which requires attribution. See https://www.openstreetmap.org/copyright for more information.  ggplot() +   background_layers +   layer_area_buildings parking_facility_url <- \"https://opendata.baltimorecity.gov/egis/rest/services/Hosted/Parking_Facilities/FeatureServer/0\"  layer_area_parking <- layer_area_data(   area = area,   url = parking_facility_url,   diag_ratio = example_diag_ratio,   color = \"gray10\",   fill = \"yellow\",   shape = 24,   size = 4,   layer_after = list(     ggtitle(\"Parking facilities in Downtown Baltimore\")   ) ) #> Layer Type: Feature Layer #> Geometry Type: esriGeometryPoint #> Service Coordinate Reference System: 3857 #> Output Coordinate Reference System: 4326  ggplot() +   background_layers +   layer_area_buildings +   layer_area_parking layer_area_trees <- layer_area_data(   area = area,   extdata = \"trees\",   fn = ~ dplyr::filter(.x, condition != \"Dead\"),   trim = TRUE,   mapping = aes(     size = dbh * 0.4,     color = factor(condition, c(\"Good\", \"Fair\", \"Poor\"))   ),   alpha = 0.6,   layer_after = list(     guides(size = \"none\"),     labs(color = \"Tree condition\"),     scale_color_manual(values = shades::gradient(c(\"forestgreen\", \"burlywood4\"), 3))   ) ) #> Reading layer `trees' from data source  #>   `/private/var/folders/3f/50m42dx1333_dfqb5772j6_40000gn/T/RtmpW2uV1G/temp_libpath1377d5a085f8a/mapbaltimore/extdata/trees.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 1422 features and 15 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 432451.5 ymin: 179986.2 xmax: 434095.1 ymax: 180841.6 #> Projected CRS: NAD83(HARN) / Maryland  ggplot() +   background_layers +   layer_area_trees"},{"path":"/articles/get_area.html","id":"working-with-multiple-areas","dir":"Articles","previous_headings":"","what":"Working with multiple areas","title":"Get areas and data to layer on a map","text":"different ways use functions dataframe multiple areas. get_area_data() function always combines multiple areas single geometry returns data bounding box encompasses areas. want get data area separately, dplyr::nest_by() purrr::map_dfr() functions can used. following example also shows get_nearby_areas() can used return data frame overlapping immediately surrounding areas.  Another approach relies using data inherited ggplot() option apply different aesthetics process data differently layer map.","code":"nearby_areas <- get_nearby_areas(area = area, type = \"neighborhood\")  nearby_areas_nested <- dplyr::nest_by(nearby_areas, name, .keep = TRUE)  nearby_parks <- purrr::map_dfr(   nearby_areas_nested$data,   ~ get_area_data(     area = .x,     data = parks,     trim = TRUE   ) %>%     dplyr::bind_cols(neighborhood = .x$name) )  ggplot() +   layer_area_data(area = nearby_areas, data = streets, trim = TRUE, color = \"gray70\") +   layer_parks +   geom_sf(data = nearby_parks, aes(fill = neighborhood)) +   scale_fill_viridis_d() +   labs(fill = \"Neighborhood\\nof park\") parks %>%   ggplot() +   layer_area_data(area = area, trim = TRUE, fill = \"forestgreen\", show_area = TRUE) +   layer_area_data(area = nearby_areas[6, ], trim = TRUE, fill = \"yellowgreen\", show_area = TRUE)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2022). mapbaltimore: Make maps Baltimore City open data. R package version 0.1.0.9001.","code":"@Manual{,   title = {mapbaltimore: Make maps for Baltimore City with open data},   author = {Eli Pousson},   year = {2022},   note = {R package version 0.1.0.9001}, }"},{"path":"/index.html","id":"mapbaltimore","dir":"","previous_headings":"","what":"An R package for mapping in Baltimore","title":"An R package for mapping in Baltimore","text":"goal mapbaltimore package provide easy way create maps Baltimore neighborhoods, Council districts, areas using open data schools, housing, parks, public transit.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for mapping in Baltimore","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") remotes::install_github(\"elipousson/mapbaltimore\")"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"An R package for mapping in Baltimore","text":"Less experienced R users may find mapbaltimore package useful convenient function can use quickly create maps Baltimore neighborhoods. example, maps show Downtown Baltimore context full city boundary local City Council district. course, underlying open data can sometimes little unpredictable. case, boundaries downtown neighborhood just slightly overlap District 12 may error.   mapping functions rely general data function (get_area_data) return selected data within around area. experienced R users may prefer use functions directly direct control appearance map access data analysis. example, compare map created map_area_parks function simple custom map made using data retrieved using get_area_data function streets get_area_streets function. get_area_streets wraps get_area_data function offers option filter streets functional classification.   Please note: real property data previously included package removed loading full dataset memory causing major performance problems. ’m developing new function download, process, cache larger data sets , complete, none functions related real property data work. need data included package, mapbaltimore includes several functions accessing remote data including get_area_osm_data get_area_esri_data. functions largely wrappers packages get_osm_features using rOpenSci osmdata package, get_area_esri_data using esri2sf package, get_maryland_open_resources using RSocrata package. example, see map liquor licenses downtown using one (still limited) number remote data sources supported get_area_esri_data:","code":"library(sf) #> Linking to GEOS 3.9.0, GDAL 3.2.0, PROJ 7.2.0 library(ggplot2) library(mapbaltimore)  set_map_theme() downtown <- get_area(type = \"neighborhood\",                      area_name = \"Downtown\")  map_area_in_city(area = downtown) +   labs(title = \"Downtown Baltimore\") map_area_in_areas(area = downtown,                   type = \"council district\",                   show_label = TRUE) map_area_parks(area = downtown) +   labs(title = \"Parks in Downtown Baltimore\") #> Reading layer `unimproved_property' from data source `/private/var/folders/zh/1h__l1b577j6ktz6b_4z5w8c0000gn/T/RtmpPPbkze/temp_libpath931313aaef1e/mapbaltimore/extdata/unimproved_property.gpkg' using driver `GPKG' #> Simple feature collection with 526 features and 64 fields #> geometry type:  MULTIPOLYGON #> dimension:      XY #> bbox:           xmin: 431755 ymin: 179395.1 xmax: 434669.5 ymax: 181385.7 #> projected CRS:  NAD83(HARN) / Maryland downtown_parks <- get_area_data(data = parks,                                 area = downtown,                                 crop = FALSE,                                 trim = FALSE)  downtown_streets <- get_area_streets(area = downtown,                                      sha_class = c(\"PART\", \"MART\", \"INT\"))  ggplot() +   geom_sf(data = downtown_streets, color = \"gray60\") +   geom_sf(data = downtown_parks, aes(fill = name), color = NA) +   labs(title = \"Parks in downtown Baltimore\",        fill = \"Park name\") liquor_licenses <- get_area_esri_data(area = downtown,                                     type = \"liquor licenses\",                                     trim = TRUE) #> [1] \"Feature Layer\" #> [1] \"esriGeometryPoint\" #> [1] \"Coordinate Reference System: 3857\" #> Warning: attribute variables are assumed to be spatially constant throughout all #> geometries  ggplot() +   geom_sf(data = downtown_streets, color = \"gray60\") +   geom_sf(data = liquor_licenses, color = \"blue\") +   labs(title = \"Liquor licenses in Downtown Baltimore\")"},{"path":"/index.html","id":"ongoing-development","dir":"","previous_headings":"","what":"Ongoing development","title":"An R package for mapping in Baltimore","text":"Overall, package definitely experimental ’m changing functions regular basis use caution. ideas ’m hoping add package: making map functions work layers (similar snapbox ggspatial) labeled data using labelled package (many city data sources limited inaccessible documentation) gt tables display property characteristics neighborhood functions working VitalSigns data Baltimore Neighborhood Indicators Alliance additional historic spatial demographic datasets Suggestions feature requests welcome!","code":""},{"path":"/index.html","id":"related-and-inspirational-packages","dir":"","previous_headings":"","what":"Related and inspirational packages","title":"An R package for mapping in Baltimore","text":"development mapbaltimore inspired part handful “place-based” R packages ’ve seen past months nycgeo New York City gateway Saint Louis. national level, tigris provides access boundary data geographies used U.S. Census Bureau. mapbaltimore uses tigris download U.S. Census geographies included package. Outside U.S., similar packages provide access varied boundary data Brazil geobr, Uruguay ‘geouy’, Chile ‘chilemapas’ Mexico ‘mxmaps’.","code":""},{"path":"/reference/adjust_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bounding box buffered and adjusted to aspect ratio — adjust_bbox","title":"Get bounding box buffered and adjusted to aspect ratio — adjust_bbox","text":"Get bounding box buffered adjusted match aspect ratio","code":""},{"path":"/reference/adjust_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bounding box buffered and adjusted to aspect ratio — adjust_bbox","text":"","code":"adjust_bbox(   area = NULL,   bbox = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   crs = NULL )"},{"path":"/reference/adjust_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bounding box buffered and adjusted to aspect ratio — adjust_bbox","text":"area sf object buffer /adjust. bbox bbox object buffer /adjust. area provided, bbox ignored. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crs Coordinate reference system bounding box return","code":""},{"path":"/reference/adjust_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bounding box buffered and adjusted to aspect ratio — adjust_bbox","text":"Class bbox object","code":""},{"path":"/reference/adjust_bbox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get bounding box buffered and adjusted to aspect ratio — adjust_bbox","text":"Takes area sf object bounding box returns bounding box matches provided aspect ratio contains area bounding box provided. Common aspect ratios include \"1:1\" (1), \"4:6\" (0.666), \"8.5:11\", \"16:9\" (1.777). asp parameter supports numeric values character strings ratios matching format \"width:height\".","code":""},{"path":"/reference/adjust_bbox_asp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bounding box adjusted to match aspect ratio — adjust_bbox_asp","title":"Get bounding box adjusted to match aspect ratio — adjust_bbox_asp","text":"Get bbox sf bbox object adjusted match aspect ratio","code":""},{"path":"/reference/adjust_bbox_asp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bounding box adjusted to match aspect ratio — adjust_bbox_asp","text":"","code":"adjust_bbox_asp(area = NULL, bbox = NULL, asp = NULL)"},{"path":"/reference/adjust_bbox_asp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bounding box adjusted to match aspect ratio — adjust_bbox_asp","text":"area sf object bbox bbox object adjust asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\").","code":""},{"path":"/reference/adjust_bbox_asp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bounding box adjusted to match aspect ratio — adjust_bbox_asp","text":"bbox object","code":""},{"path":"/reference/adjust_bbox_asp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get bounding box adjusted to match aspect ratio — adjust_bbox_asp","text":"Takes area  sf bbox object returns bounding box matches aspect ratio provided asp contains area bounding box provided. Common aspect ratios include \"1:1\" (1), \"4:6\" (0.666), \"8.5:11\", \"16:9\" (1.777). asp parameter supports numeric values character strings ratios matching format \"width:height\".","code":""},{"path":"/reference/adopted_plans.html","id":null,"dir":"Reference","previous_headings":"","what":"Adopted city plans, accepted community-initiated plans, and LINCS corridors — adopted_plans","title":"Adopted city plans, accepted community-initiated plans, and LINCS corridors — adopted_plans","text":"Combined area plans LINCS corridor data Baltimore City Department Planning.","code":""},{"path":"/reference/adopted_plans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adopted city plans, accepted community-initiated plans, and LINCS corridors — adopted_plans","text":"","code":"adopted_plans"},{"path":"/reference/adopted_plans.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Adopted city plans, accepted community-initiated plans, and LINCS corridors — adopted_plans","text":"data frame 58 rows 5 variables: plan_name Plan area name year_adopted Year adopted initiated program Planning program url URL plan website document geometry Multipolygon plan areas multilinestring LINCS corridors","code":""},{"path":"/reference/adopted_plans.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Adopted city plans, accepted community-initiated plans, and LINCS corridors — adopted_plans","text":"...","code":""},{"path":"/reference/baltimore_block_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"U.S. Census Block Groups — baltimore_block_groups","title":"U.S. Census Block Groups — baltimore_block_groups","text":"...","code":""},{"path":"/reference/baltimore_block_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.S. Census Block Groups — baltimore_block_groups","text":"","code":"baltimore_block_groups"},{"path":"/reference/baltimore_block_groups.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.S. Census Block Groups — baltimore_block_groups","text":"data frame 653 rows 9 variables: tractce census tract code blkgrpce block group number geoid Census block group identifier; concatenation state FIPS code, county FIPS code, census tract code, block group number namelsad translated legal/statistical area description block group number aland land area (square meters) awater water area (square meters) intptlat latitude internal point intptlon longitude internal point geometry Polygon block group boundary","code":""},{"path":"/reference/baltimore_block_groups.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"U.S. Census Block Groups — baltimore_block_groups","text":"https://www.census.gov/geo/maps-data/data/tiger-line.html","code":""},{"path":"/reference/baltimore_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"U.S. Census Blocks (2010 Decennial) — baltimore_blocks","title":"U.S. Census Blocks (2010 Decennial) — baltimore_blocks","text":"...","code":""},{"path":"/reference/baltimore_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.S. Census Blocks (2010 Decennial) — baltimore_blocks","text":"","code":"baltimore_blocks"},{"path":"/reference/baltimore_blocks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.S. Census Blocks (2010 Decennial) — baltimore_blocks","text":"data frame 13,598 rows 9 variables: tractce10 Tract FIPS blockce10 Block FIPS geoid10 Block GeoID name10 Block name aland10 Land area awater10 Water area intptlat10 Interior center point latitude intptlon10 Interior center point longitude geometry Multipolygon block boundary","code":""},{"path":"/reference/baltimore_blocks.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"U.S. Census Blocks (2010 Decennial) — baltimore_blocks","text":"https://www.census.gov/geo/maps-data/data/tiger-line.html","code":""},{"path":"/reference/baltimore_city.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized political boundary for Baltimore City — baltimore_city","title":"Generalized political boundary for Baltimore City — baltimore_city","text":"generalized boundary Baltimore City, Maryland statewide dataset generalized county boundaries.","code":""},{"path":"/reference/baltimore_city.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized political boundary for Baltimore City — baltimore_city","text":"","code":"baltimore_city"},{"path":"/reference/baltimore_city.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Generalized political boundary for Baltimore City — baltimore_city","text":"data frame 1 row 3 variables: name County name countyfp 3-character county FIPS code geoid county identifier; concatenation state FIPS code county FIPS code aland land area (square meters) awater water area (square meters) intptlat latitude internal point intptlon longitude internal point geometry Multipolygon boundary","code":""},{"path":"/reference/baltimore_city.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Generalized political boundary for Baltimore City — baltimore_city","text":"https://www.census.gov/geo/maps-data/data/tiger-line.html","code":""},{"path":"/reference/baltimore_city_detailed.html","id":null,"dir":"Reference","previous_headings":"","what":"Detailed physical boundary for Baltimore City — baltimore_city_detailed","title":"Detailed physical boundary for Baltimore City — baltimore_city_detailed","text":"detailed physical boundary Baltimore City.","code":""},{"path":"/reference/baltimore_city_detailed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detailed physical boundary for Baltimore City — baltimore_city_detailed","text":"","code":"baltimore_city_detailed"},{"path":"/reference/baltimore_city_detailed.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Detailed physical boundary for Baltimore City — baltimore_city_detailed","text":"data frame 1 row 3 variables: name County name countyfp 3-character county FIPS code geometry Multipolygon physical boundary","code":""},{"path":"/reference/baltimore_city_detailed.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Detailed physical boundary for Baltimore City — baltimore_city_detailed","text":"https://data.imap.maryland.gov/datasets/maryland-physical-boundaries-county-boundaries-detailed","code":""},{"path":"/reference/baltimore_mihp.html","id":null,"dir":"Reference","previous_headings":"","what":"Maryland Inventory of Historic Properties in Baltimore City — baltimore_mihp","title":"Maryland Inventory of Historic Properties in Baltimore City — baltimore_mihp","text":"...","code":""},{"path":"/reference/baltimore_mihp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maryland Inventory of Historic Properties in Baltimore City — baltimore_mihp","text":"","code":"baltimore_mihp"},{"path":"/reference/baltimore_mihp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Maryland Inventory of Historic Properties in Baltimore City — baltimore_mihp","text":"data frame 5,203 rows 14 variables: num_polys ... mihp_id ... property_id ... mihp_num ... name ... alternate_name ... full_address ... town ... county ... pdflink ... xcoord ... ycoord ... do_erecord ... geoms ...","code":""},{"path":"/reference/baltimore_mihp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Maryland Inventory of Historic Properties in Baltimore City — baltimore_mihp","text":"...","code":""},{"path":"/reference/baltimore_msa_counties.html","id":null,"dir":"Reference","previous_headings":"","what":"County boundaries for the Baltimore–Columbia–Towson MSA — baltimore_msa_counties","title":"County boundaries for the Baltimore–Columbia–Towson MSA — baltimore_msa_counties","text":"Counties boundaries Baltimore–Columbia–Towson Metropolitan Statistical Area (MSA) include Baltimore City, Baltimore County, Carroll County, Anne Arundel County, Howard County, Queen Anne's County, Harford County.","code":""},{"path":"/reference/baltimore_msa_counties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"County boundaries for the Baltimore–Columbia–Towson MSA — baltimore_msa_counties","text":"","code":"baltimore_msa_counties"},{"path":"/reference/baltimore_msa_counties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"County boundaries for the Baltimore–Columbia–Towson MSA — baltimore_msa_counties","text":"data frame 7 rows 18 variables: statefp State FIPS code Maryland countyfp County FIPS code countyns County GNIS code geoid Unique county FIPS code (concatenation state county FIPS codes) name County name namelsad Concatenated variable length geographic area name legal/statistical area description (LSAD) lsad Legal/statistical area description (LSAD) classfp FIPS class code mtfcc MAF/TIGER Feature Class Code (MTFCC) csafp Combined statistical area code cbsafp Metropolitan statistical area/micropolitan statistical area code metdivfp Metropolitan division code funcstat Functional status aland Land area (square meters) awater Water area (square meters) intptlat Latitude internal point intptlon Longitude internal point geometry Multipolygon county boundary","code":""},{"path":"/reference/baltimore_msa_counties.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"County boundaries for the Baltimore–Columbia–Towson MSA — baltimore_msa_counties","text":"https://www.census.gov/geo/maps-data/data/tiger-line.html","code":""},{"path":"/reference/baltimore_pumas.html","id":null,"dir":"Reference","previous_headings":"","what":"Public Use Microdata Areas (PUMAS) — baltimore_pumas","title":"Public Use Microdata Areas (PUMAS) — baltimore_pumas","text":"U.S. Census Bureau explains \"Public Use Microdata Areas  (PUMAs) non-overlapping, statistical geographic areas partition  state equivalent entity geographic areas containing fewer  100,000 people ... Census Bureau defines PUMAs  tabulation dissemination decennial census American Community  Survey (ACS) Public Use Microdata Sample (PUMS) data.\"","code":""},{"path":"/reference/baltimore_pumas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Public Use Microdata Areas (PUMAS) — baltimore_pumas","text":"","code":"baltimore_pumas"},{"path":"/reference/baltimore_pumas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Public Use Microdata Areas (PUMAS) — baltimore_pumas","text":"data frame 5 rows 11 variables: statefp10 State FIPS code Maryland pumace10 PUMA code geoid10 GeoID namelsad10 name translated legal/statistical area description code census tract mtfcc10 MAF/TIGER Feature Class Code (MTFCC) funcstat10 functional status aland10 land area (square meters) awater10 water area (square meters) intptlat10 latitude internal point intptlon10 longitude internal point geometry Polygon PUMA boundary","code":""},{"path":"/reference/baltimore_tracts.html","id":null,"dir":"Reference","previous_headings":"","what":"U.S. Census Tracts — baltimore_tracts","title":"U.S. Census Tracts — baltimore_tracts","text":"...","code":""},{"path":"/reference/baltimore_tracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.S. Census Tracts — baltimore_tracts","text":"","code":"baltimore_tracts"},{"path":"/reference/baltimore_tracts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.S. Census Tracts — baltimore_tracts","text":"data frame 200 rows 9 variables: tractce census tract code geoid nation-based census tract identifier; concatenation state FIPS code, county FIPS code, census tract number name Variable length geographic area name namelsad name translated legal/statistical area description code census tract aland land area (square meters) awater water area (square meters) intptlat latitude internal point intptlon longitude internal point geometry Polygon tract boundary","code":""},{"path":"/reference/baltimore_tracts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"U.S. Census Tracts — baltimore_tracts","text":"https://www.census.gov/geo/maps-data/data/tiger-line.html","code":""},{"path":"/reference/baltimore_water.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore Water — baltimore_water","title":"Baltimore Water — baltimore_water","text":"Detailed multipolygon data streams, lakes, water Baltimore City.","code":""},{"path":"/reference/baltimore_water.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore Water — baltimore_water","text":"","code":"baltimore_water"},{"path":"/reference/baltimore_water.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore Water — baltimore_water","text":"data frame 468 rows 6 variables: name Water feature name, available type Water type subtype Water subtype symbol Symbol water Water indicator geometry Multipolygon geometry","code":""},{"path":"/reference/baltimore_water.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Baltimore Water — baltimore_water","text":"https://data.imap.maryland.gov/datasets/maryland-waterbodies-rivers--streams-detailed","code":""},{"path":"/reference/bcps_programs.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore City Public School Programs — bcps_programs","title":"Baltimore City Public School Programs — bcps_programs","text":"Locations school buildings/school programs.","code":""},{"path":"/reference/bcps_programs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore City Public School Programs — bcps_programs","text":"","code":"bcps_programs"},{"path":"/reference/bcps_programs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore City Public School Programs — bcps_programs","text":"data frame 165 rows 6 variables: program_name Program school name program_number Program number type Program type category Program category, e.g. E, EM, H, etc. zone_name Program name zone appended geometry Multipolygons school program location","code":""},{"path":"/reference/bcps_programs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Baltimore City Public School Programs — bcps_programs","text":"https://services3.arcgis.com/mbYrzb5fKcXcAMNi/ArcGIS/rest/services/SY2021_Programs/FeatureServer/0","code":""},{"path":"/reference/bcps_zones.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore City Public Schools School Zones or School Attendance Zones — bcps_zones","title":"Baltimore City Public Schools School Zones or School Attendance Zones — bcps_zones","text":"Baltimore City Public Schools School Zones also known School Attendance Zones.","code":""},{"path":"/reference/bcps_zones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore City Public Schools School Zones or School Attendance Zones — bcps_zones","text":"","code":"bcps_zones"},{"path":"/reference/bcps_zones.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore City Public Schools School Zones or School Attendance Zones — bcps_zones","text":"data frame 96 rows 4 variables: program_name Program school name program_number Program number zone_name Program name zone appended geometry Multipolygons school zone boundaries","code":""},{"path":"/reference/bcps_zones.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Baltimore City Public Schools School Zones or School Attendance Zones — bcps_zones","text":"https://services3.arcgis.com/mbYrzb5fKcXcAMNi/ArcGIS/rest/services/BCPSZones_2021/FeatureServer/0","code":""},{"path":"/reference/buffer_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Get buffered area — buffer_area","title":"Get buffered area — buffer_area","text":"Return sf object area buffer applied . buffer distance provided, default buffer calculated one-eighth diagonal distance bounding box (corner corner) area. metadata provided area remains .","code":""},{"path":"/reference/buffer_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get buffered area — buffer_area","text":"","code":"buffer_area(area, dist = NULL, diag_ratio = NULL)"},{"path":"/reference/buffer_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get buffered area — buffer_area","text":"area sf object. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided.","code":""},{"path":"/reference/cache_baltimore_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache data for mapbaltimore package — cache_baltimore_data","title":"Cache data for mapbaltimore package — cache_baltimore_data","text":"Cache data `rappdirs::user_cache_dir(\"mapbaltimore\")`","code":""},{"path":"/reference/cache_baltimore_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache data for mapbaltimore package — cache_baltimore_data","text":"","code":"cache_baltimore_data(data = NULL, filename = NULL, overwrite = FALSE)  cache_msa_streets(       url = \"https://geodata.md.gov/imap/rest/services/Transportation/MD_HighwayPerformanceMonitoringSystem/MapServer/2\",   filename = \"baltimore_msa_streets.gpkg\",   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804),   overwrite = FALSE )  cache_edge_of_pavement(       url = \"https://gisdata.baltimorecity.gov/egis/rest/services/OpenBaltimore/Edge_of_Pavement/FeatureServer/0\",   filename = \"edge_of_pavement.gpkg\",   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804),   overwrite = FALSE )  show_cached_files()"},{"path":"/reference/cache_baltimore_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache data for mapbaltimore package — cache_baltimore_data","text":"data Data cache. filename File name use cached file. Defaults name data. data sf object make sure include file type, e.g. \"data.gpkg\", supported `sf::write_sf()`. data written rda `readr::write_rds()`. overwrite Logical. Default FALSE. TRUE, overwrite existing cached files use filename.","code":""},{"path":"/reference/cache_baltimore_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache data for mapbaltimore package — cache_baltimore_data","text":"`show_cached_files()` returns tibble columns:  - `file`, name file,  - `size_MB`, file size MB,  - `modified`, date time last modified","code":""},{"path":"/reference/cache_baltimore_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cache data for mapbaltimore package — cache_baltimore_data","text":"* Use `cache_msa_streets()` download cache street centerline data counties Baltimore metropolitan area.  * Use  `cache_edge_of_pavement()` download cache edge pavement data Baltimore city.","code":""},{"path":"/reference/check_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate area provided to mapping or charting function. — check_area","title":"Validate area provided to mapping or charting function. — check_area","text":"Validate area mapping function another mapbaltimore function.","code":""},{"path":"/reference/check_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate area provided to mapping or charting function. — check_area","text":"","code":"check_area(area)"},{"path":"/reference/check_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate area provided to mapping or charting function. — check_area","text":"area sf object column named \"name.\"","code":""},{"path":"/reference/circulator_routes.html","id":null,"dir":"Reference","previous_headings":"","what":"Charm City Circulator Routes — circulator_routes","title":"Charm City Circulator Routes — circulator_routes","text":"Baltimore City Department Transportation explains: \"  Charm City Circulator (CCC), fleet 24 free shuttles travel four   routes central business district Baltimore City, Maryland.   Harbor Connector (HC) extension CCC City’s free   maritime transit service connecting 6 piers four vessels.\"","code":""},{"path":"/reference/circulator_routes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Charm City Circulator Routes — circulator_routes","text":"","code":"circulator_routes"},{"path":"/reference/circulator_routes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Charm City Circulator Routes — circulator_routes","text":"data frame 6 rows 3 variables: route_name character Route name alt_route_name character Alternate route name geometry list Route geometry","code":""},{"path":"/reference/circulator_routes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Charm City Circulator Routes — circulator_routes","text":"Baltimore CityView - Charm City Circulator Routes","code":""},{"path":"/reference/circulator_stops.html","id":null,"dir":"Reference","previous_headings":"","what":"Charm City Circulator Stops — circulator_stops","title":"Charm City Circulator Stops — circulator_stops","text":"Baltimore City Department Transportation explains: \"  Charm City Circulator (CCC), fleet 24 free shuttles travel four   routes central business district Baltimore City, Maryland.   Harbor Connector (HC) extension CCC City’s free   maritime transit service connecting 6 piers four vessels.\"","code":""},{"path":"/reference/circulator_stops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Charm City Circulator Stops — circulator_stops","text":"","code":"circulator_stops"},{"path":"/reference/circulator_stops.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Charm City Circulator Stops — circulator_stops","text":"data frame 111 rows 5 variables: stop_num integer Stop number stop_location character Intersection location (address, intersection, landmark) corner character Intersection corner route_name character Route name geometry list Stop points","code":""},{"path":"/reference/circulator_stops.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Charm City Circulator Stops — circulator_stops","text":"Baltimore CityView - Charm City Circulator Stops","code":""},{"path":"/reference/clip_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip an area to a portion of the whole area — clip_area","title":"Clip an area to a portion of the whole area — clip_area","text":"Clip based corner bounding box. Used street name location option within layer_area_streets","code":""},{"path":"/reference/clip_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip an area to a portion of the whole area — clip_area","text":"","code":"clip_area(   area,   clip = c(\"top\", \"right\", \"bottom\", \"left\", \"topright\", \"bottomright\", \"bottomleft\",     \"topleft\"),   flip = FALSE,   edge = TRUE,   edge_dist = 5 )"},{"path":"/reference/clip_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip an area to a portion of the whole area — clip_area","text":"area sf object clip clip Character string describing part area clip remove. Options include c(\"top\", \"right\", \"bottom\", \"left\", \"topright\", \"bottomright\", \"bottomleft\", \"topleft\"). NULL, area clipped full edge can returned. flip Logical. Default FALSE. TRUE, reverse select area removed, e.g. `clip` \"topright\" \"bottomleft\" area removed instead. edge Logical. Default TRUE. TRUE, edge clipped area returned.  TRUE negative `edge_dist`, edges kept (center removed). TRUE positive `edge_dist`, full area removed buffer kept. FALSE, full clipped area returned. edge_dist Numeric. Distance meters use edge. Default 5 meters. Use negative values inside edge positive numbers outside edge.","code":""},{"path":"/reference/clip_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip an area to a portion of the whole area — clip_area","text":"sf object clipped based parameters","code":""},{"path":"/reference/congressional_districts.html","id":null,"dir":"Reference","previous_headings":"","what":"U.S. Congressional Districts for Baltimore City — congressional_districts","title":"U.S. Congressional Districts for Baltimore City — congressional_districts","text":"U.S. Congressional Districts overlapping Baltimore City. Downloaded tigris package.","code":""},{"path":"/reference/congressional_districts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.S. Congressional Districts for Baltimore City — congressional_districts","text":"","code":"congressional_districts"},{"path":"/reference/congressional_districts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.S. Congressional Districts for Baltimore City — congressional_districts","text":"data frame 3 rows 15 variables: statefp 2-character state FIPS code cd116fp 116th congressional district FIPS code geoid GeoID namelsad concatenated variable length geographic area name legal/statistical area description (LSAD) lsad Legal/statistical area description (LSAD) cdsessn Congressional session code mtfcc MAF/TIGER Feature Class Code (MTFCC) funcstat functional status aland land area (square meters) awater water area (square meters) intptlat latitude internal point intptlon longitude internal point label Congressional District label name Congressional District name geometry Multipolygon Congressional district boundary","code":""},{"path":"/reference/congressional_districts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"U.S. Congressional Districts for Baltimore City — congressional_districts","text":"...","code":""},{"path":"/reference/council_districts.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore City Council Districts — council_districts","title":"Baltimore City Council Districts — council_districts","text":"Baltimore City Council Districts used since 2012 (following boundary revisions completed 2011).","code":""},{"path":"/reference/council_districts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore City Council Districts — council_districts","text":"","code":"council_districts"},{"path":"/reference/council_districts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore City Council Districts — council_districts","text":"data frame 14 rows 2 variables: id Number City Council district name Name City Council district geometry Multipolygons boundaries City Council districts","code":""},{"path":"/reference/council_districts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Baltimore City Council Districts — council_districts","text":"https://geodata.baltimorecity.gov/egis/rest/services/CityView/City_Council_Districts/MapServer/0","code":""},{"path":"/reference/csas.html","id":null,"dir":"Reference","previous_headings":"","what":"Community Statistical Areas (2010) — csas","title":"Community Statistical Areas (2010) — csas","text":"Community Statistical Areas (CSAs) clusters neighborhoods organized around U.S. Census tract boundaries Baltimore Neighborhood Indicators Alliance. cases, CSA boundaries may cross neighborhood boundaries. 55 CSAs Baltimore City. Neighborhood lines often fall along CSA boundaries. CSAs originally created 2002 revised publication Vital Signs 10 using new 2010 Census Tract boundaries. anticipated boundary revisions 2020.","code":""},{"path":"/reference/csas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Community Statistical Areas (2010) — csas","text":"","code":"csas"},{"path":"/reference/csas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Community Statistical Areas (2010) — csas","text":"data frame 55 rows 3 variables: id Community Statistical Area id number name Community Statistical Area name url URL BNIA-JFI webpage Community Statistical Area geometry Multipolygon area boundary","code":""},{"path":"/reference/csas.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Community Statistical Areas (2010) — csas","text":"https://bniajfi.org/mapping-resources/","code":""},{"path":"/reference/explore_baltimore.html","id":null,"dir":"Reference","previous_headings":"","what":"Stories from Explore Baltimore Heritage — explore_baltimore","title":"Stories from Explore Baltimore Heritage — explore_baltimore","text":"table public stories Explore Baltimore Heritage website.","code":""},{"path":"/reference/explore_baltimore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stories from Explore Baltimore Heritage — explore_baltimore","text":"","code":"explore_baltimore"},{"path":"/reference/explore_baltimore.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stories from Explore Baltimore Heritage — explore_baltimore","text":"data frame 459 rows 10 variables: id Story identifier featured Featured indicator modified Modified date/time title Story title address Street address story location thumbnail URL thumbnail-size featured image fullsize URL full-size featured image url URL story geometry Point story location","code":""},{"path":"/reference/explore_baltimore.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Stories from Explore Baltimore Heritage — explore_baltimore","text":"https://explore.baltimoreheritage.org/","code":""},{"path":"/reference/filter_streets.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter streets\n\nInternal function for filtering streets by multiple parameters — filter_streets","title":"Filter streets\n\nInternal function for filtering streets by multiple parameters — filter_streets","text":"Filter streets Internal function filtering streets multiple parameters","code":""},{"path":"/reference/filter_streets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter streets\n\nInternal function for filtering streets by multiple parameters — filter_streets","text":"","code":"filter_streets(   x,   sha_class = NULL,   street_type = NULL,   block_num = NULL,   union = FALSE )"},{"path":"/reference/filter_streets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter streets\n\nInternal function for filtering streets by multiple parameters — filter_streets","text":"x sf object streets filter sha_class selected SHA classifications include. \"\" selects streets assigned SHA classification (around one-quarter street segments). Additional options include c(\"COLL\", \"LOC\", \"MART\", \"PART\", \"FWY\", \"INT\") street_type selected street subtypes include. default, returned data includes subtypes except alleys (\"STRALY\"). Options include c(\"STRALY\", \"STRPRD\", \"STRR\", \"STREX\", \"STRFIC\", \"STRNDR\", \"STRURD\", \"STCLN\", \"STRTN\"). supported block_num Integer vector block number c(300) range block numbers (c(100, 500)) filter streets. union Logical. Default `TRUE`. Union geometry based `fullname` streets.","code":""},{"path":"/reference/filter_streets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter streets\n\nInternal function for filtering streets by multiple parameters — filter_streets","text":"streets filtered parameters","code":""},{"path":"/reference/get_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Get area of selected type — get_area","title":"Get area of selected type — get_area","text":"Get sf object one neighborhoods, Baltimore City Council districts, Maryland Legislative Districts, U.S. Congressional Districts, Baltimore Planning Districts, Baltimore Police Districts, Community Statistical Areas, park districts, Census blocks, block groups, tracts. Area type required can used combination area name, area id (supported data sets), location (address sf object). Name id supported U.S. Census geogrpahies. Use location parameter return areas selected type intersect specified location.","code":""},{"path":"/reference/get_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get area of selected type — get_area","text":"","code":"get_area(   type = c(\"neighborhood\", \"council district\", \"legislative district\",     \"congressional district\", \"planning district\", \"police district\", \"csa\",     \"park district\", \"block\", \"block group\", \"tract\"),   area_name = NULL,   area_id = NULL,   location = NULL,   union = FALSE,   area_label = NULL )"},{"path":"/reference/get_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get area of selected type — get_area","text":"type Required. Area type matching one boundary datasets included mapbaltimore. Supported values include \"neighborhood\", \"council district\", \"legislative district\", \"congressional district\", \"planning district\", \"police district\", \"csa\", \"park district\". U.S. Census geographies including \"block\", \"block group\", \"tract\" supported using location parameter . area_name name names matching id column data selected dataset. Character. area_id identifier identifiers matching id column selected dataset. supported datasets id column id may integer character depending dataset. location Location supports types values: address can geocoded using geo ** sf object intersects selected area types. using sf object, CRS object must EPSG:2804. union TRUE multiple area names provided, area geometry combined st_union. Defaults FALSE. area_label Label use name area union TRUE additional label column union FALSE. union TRUE `area_label` provided, original area names concatenated single string.","code":""},{"path":[]},{"path":"/reference/get_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get area of selected type — get_area","text":"","code":"# Get the Harwood neighborhood by name get_area(type = \"neighborhood\", area_name = \"Harwood\") #> Simple feature collection with 1 feature and 5 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 433352.6 ymin: 183378.6 xmax: 433678.1 ymax: 183986.1 #> Projected CRS: NAD83(HARN) / Maryland #> # A tibble: 1 × 6 #>   name    type          acres osm_id   wikidata                         geometry #> * <chr>   <chr>       [acres] <chr>    <chr>                  <MULTIPOLYGON [m]> #> 1 Harwood Residential    45.4 12752188 Q5677875 (((433531.7 183984, 433485 1839…  # Get City Council District 12 and 14 by id get_area(type = \"council district\", area_id = c(12, 14)) #> Simple feature collection with 2 features and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 431075 ymin: 179871.4 xmax: 436683.8 ymax: 186408.6 #> Projected CRS: NAD83(HARN) / Maryland #>   id                       geometry        name #> 1 14 MULTIPOLYGON (((432649.3 18... District 14 #> 2 12 MULTIPOLYGON (((433676 1838... District 12  # Get the east and southeast planning districts and combine them get_area(type = \"planning district\", area_id = c(\"East\", \"Southeast\"), union = TRUE, area_label = \"East and Southeast Planning Districts\") #> Simple feature collection with 1 feature and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 433455.8 ymin: 174664.5 xmax: 440590 ymax: 184534.6 #> Projected CRS: NAD83(HARN) / Maryland #> # A tibble: 1 × 2 #>   name                                                                  geometry #> * <chr>                                                            <POLYGON [m]> #> 1 East and Southeast Planning Districts ((440563.8 180919.3, 440565 180641.7, 4…  # Get legislative district for Walters Art Museum (600 N Charles St) get_area(type = \"legislative district\", location = \"600 N Charles St, Baltimore, MD 21201\") #> Passing 1 address to the Nominatim single address geocoder #> Query completed in: 1.3 seconds #> Simple feature collection with 1 feature and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 426866.8 ymin: 176425.9 xmax: 433650.1 ymax: 186361 #> Projected CRS: NAD83(HARN) / Maryland #>          name id                                   label #> 1 District 40 40 Maryland House of Delegates District 40 #>                         geometry #> 1 MULTIPOLYGON (((433577.1 18...  # Get Census tracts for the Edmondson Village neighborhood get_area(type = \"tract\", location = get_area(\"neighborhood\", \"Edmondson Village\")) #> Simple feature collection with 4 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 426310.4 ymin: 179598.9 xmax: 428427.1 ymax: 182089.4 #> Projected CRS: NAD83(HARN) / Maryland #>   tractce       geoid    name             namelsad   aland awater    intptlat #> 1  280402 24510280402 2804.02 Census Tract 2804.02  561712      0 +39.2992263 #> 2  160801 24510160801 1608.01 Census Tract 1608.01  389703      0 +39.2980940 #> 3  160802 24510160802 1608.02 Census Tract 1608.02 1226587      0 +39.3002221 #> 4  200701 24510200701 2007.01 Census Tract 2007.01 1203683      0 +39.2900137 #>       intptlon                       geometry #> 1 -076.6903724 POLYGON ((426310.4 181800, ... #> 2 -076.6840558 POLYGON ((426948.8 181600.5... #> 3 -076.6796308 POLYGON ((426781.2 181841.4... #> 4 -076.6807033 POLYGON ((426791.8 180643.4..."},{"path":"/reference/get_area_911_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"Get area 911 calls for service from Open Baltimore — get_area_911_calls","title":"Get area 911 calls for service from Open Baltimore — get_area_911_calls","text":"Get 911 calls service 2021 2022.","code":""},{"path":"/reference/get_area_911_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get area 911 calls for service from Open Baltimore — get_area_911_calls","text":"","code":"get_area_911_calls(   area_type = NULL,   area_name = NULL,   description = NULL,   start_date = NULL,   end_date = NULL,   where = \"1=1\" )"},{"path":"/reference/get_area_911_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get area 911 calls for service from Open Baltimore — get_area_911_calls","text":"area_type Area type. Requires area_name also provided. Options include \"neighborhood\", \"council district\", \"police district\" area_name Area name. Requires area_type also provided. description String matching call description, e.g. \"DISORDERLY\", \"BURGLARY\", \"DISCHRG FIREARM\", etc. start_date Character string format YYYY-MM-DD. Filters calls date. end_date Character string format YYYY-MM-DD.  Filters calls date. string condition. Ignored area_type, area_name, start_date, end_date provided.","code":""},{"path":"/reference/get_area_bcps_programs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get BCPS programs and attendance zones for a local area — get_area_bcps_programs","title":"Get BCPS programs and attendance zones for a local area — get_area_bcps_programs","text":"Get BCPS programs attendance zones local area","code":""},{"path":"/reference/get_area_bcps_programs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get BCPS programs and attendance zones for a local area — get_area_bcps_programs","text":"","code":"get_area_bcps_programs(   area,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   crop = TRUE,   trim = FALSE,   type = c(\"all\", \"zones\", \"programs\", \"other\") )"},{"path":"/reference/get_area_bcps_programs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get BCPS programs and attendance zones for a local area — get_area_bcps_programs","text":"area sf object. multiple areas provided, unioned single sf object using st_union dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crop TRUE, data cropped area bounding box st_crop adjusted `dist`, `diag_ratio`, `asp` parameters provided. Default TRUE. trim TRUE, data trimmed area st_intersection. option supported adjusted areas use `dist`, `diag_ratio`, `asp` parameters. Default FALSE. type Type BCPS data return. \"\" returns named list following spatial data. \"zones\" returns attendance zones, \"programs\" returns locations programs (schools) zones intersecting area (even program located outside area), \"\" returns charter schools special schools located within specified area.","code":""},{"path":"/reference/get_area_bcps_programs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get BCPS programs and attendance zones for a local area — get_area_bcps_programs","text":"Returns named list overlapping BCPS attendance zones, program locations associated zones, additional programs located within area.","code":""},{"path":"/reference/get_area_census_geography.html","id":null,"dir":"Reference","previous_headings":"","what":"Get U.S. Census geography overlapping with an area. — get_area_census_geography","title":"Get U.S. Census geography overlapping with an area. — get_area_census_geography","text":"Return sf object U.S. Census blocks, block groups, tracts overlapping area. default, least 25 Returned sf object includes new columns combined land water area Census geography, Census geography area within provided area, percent Census geography area within provided area, percent provided area within Census geography area.","code":""},{"path":"/reference/get_area_census_geography.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get U.S. Census geography overlapping with an area. — get_area_census_geography","text":"","code":"get_area_census_geography(   area,   geography = c(\"block\", \"block group\", \"tract\"),   area_overlap = NULL )"},{"path":"/reference/get_area_census_geography.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get U.S. Census geography overlapping with an area. — get_area_census_geography","text":"area sf object. geography Character vector type U.S. Census area_overlap Optional. numeric value less 1 greater 0 representing physical area geography within provided area return.","code":""},{"path":"/reference/get_area_citations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get area citations from Open Baltimore — get_area_citations","title":"Get area citations from Open Baltimore — get_area_citations","text":"Get Environmental Control Board (ECB) citations 2007   2021.","code":""},{"path":"/reference/get_area_citations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get area citations from Open Baltimore — get_area_citations","text":"","code":"get_area_citations(   area_type = NULL,   area_name = NULL,   description = NULL,   start_date = NULL,   end_date = NULL,   where = \"1=1\",   geometry = TRUE,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804) )"},{"path":"/reference/get_area_citations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get area citations from Open Baltimore — get_area_citations","text":"area_type Area type. Requires area_name also provided. Options include \"neighborhood\", \"council district\", \"police district\" area_name Area name. Requires area_type also provided. description String matching description citations, e.g. \"SIGNS\" filters citations \"PROHIBITED POSTING SIGNS PUBLIC PROPERTY\" start_date Character string format YYYY-MM-DD. Filters citations violation date. end_date Character string format YYYY-MM-DD. Filters citations violation date. string condition. Ignore condition area_type area_name provided. geometry Return sf object based lat/lon. Default TRUE. Set FALSE return citations missing coordinates. crs Coordinate reference system (CRS) return. Default 2804","code":""},{"path":"/reference/get_area_citations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get area citations from Open Baltimore — get_area_citations","text":"","code":"# Get bulk trash citations for Council District 5 get_area_citations(    area_type = \"council district\",    area_name = \"5\",    description = \"BULK TRASH\") #> Layer Type: Table #> Simple feature collection with 814 features and 30 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 424889.3 ymin: 184841.3 xmax: 430399.3 ymax: 189322.6 #> Projected CRS: NAD83(HARN) / Maryland #> # A tibble: 814 × 31 #>    citation_no lien_code violation_date      due_date            agency          #>  * <chr>       <chr>     <dttm>              <dttm>              <chr>           #>  1 04382735    L         2007-03-15 00:00:00 2007-04-14 00:00:00 DEPARTMENT OF … #>  2 05249719    L         2010-07-15 00:00:00 2010-08-14 00:00:00 BALTIMORE CITY… #>  3 05335070    L         2011-08-26 00:00:00 2011-09-25 00:00:00 BALTIMORE CITY… #>  4 50005016    L         2007-05-29 00:00:00 2007-06-28 00:00:00 DEPARTMENT OF … #>  5 50053941    L         2007-08-01 00:00:00 2007-08-31 00:00:00 DEPARTMENT OF … #>  6 50116920    L         2007-10-10 00:00:00 2007-11-09 00:00:00 DEPARTMENT OF … #>  7 50263862    L         2008-03-27 00:00:00 2008-04-26 00:00:00 DEPARTMENT OF … #>  8 50436708    L         2008-09-17 00:00:00 2008-10-17 00:00:00 DEPARTMENT OF … #>  9 50493634    L         2008-11-12 00:00:00 2008-12-12 00:00:00 DEPARTMENT OF … #> 10 50520915    L         2008-12-03 00:00:00 2009-01-02 00:00:00 DEPARTMENT OF … #> # … with 804 more rows, and 26 more variables: fine_amount <dbl>, #> #   description <chr>, balance <dbl>, last_paid_date <dttm>, #> #   last_paid_amount <dbl>, hearing_date <dttm>, #> #   hearing_request_received_date <dttm>, citation_status <chr>, #> #   violation_code_article <chr>, violation_code_section <chr>, #> #   violation_location <chr>, block <chr>, lot <chr>, officer_id <chr>, #> #   officer_presence_requested <chr>, hearing_status <chr>, hear_time <chr>, …"},{"path":"/reference/get_area_crashes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vehicle crashes for area in Baltimore from Maryland Open Data portal — get_area_crashes","title":"Get vehicle crashes for area in Baltimore from Maryland Open Data portal — get_area_crashes","text":"Get vehicle crashes selected area Baltimore City.","code":""},{"path":"/reference/get_area_crashes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vehicle crashes for area in Baltimore from Maryland Open Data portal — get_area_crashes","text":"","code":"get_area_crashes(   area,   start_year = 2020,   end_year = 2020,   geometry = FALSE,   trim = FALSE,   type = c(\"crash\", \"person\", \"vehicle\") )"},{"path":"/reference/get_area_crashes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vehicle crashes for area in Baltimore from Maryland Open Data portal — get_area_crashes","text":"area sf object. start_year earliest year crash data return. Default 2020. end_year latest year crash data return. end_year provided, single year returned. Default 2020. geometry TRUE, return sf object. Default FALSE. trim TRUE, data trimmed area st_intersection. Default FALSE. type Data type return. Options include c(\"crash\", \"person\", \"vehicle\"). Data types correspond different tables. 'person', age crash column added based accident date date birth columns (removing suspected placeholder values).","code":""},{"path":"/reference/get_area_crime.html","id":null,"dir":"Reference","previous_headings":"","what":"Get area crimes from Open Baltimore — get_area_crime","title":"Get area crimes from Open Baltimore — get_area_crime","text":"Get reported crimes since 2014 specific area.","code":""},{"path":"/reference/get_area_crime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get area crimes from Open Baltimore — get_area_crime","text":"","code":"get_area_crime(   area,   description = NULL,   where = \"1=1\",   dist = NULL,   diag_ratio = NULL,   asp = NULL,   trim = FALSE,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804) )"},{"path":"/reference/get_area_crime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get area crimes from Open Baltimore — get_area_crime","text":"area sf object. Optional. used trim TRUE. description Crime type description. Supported options include \"AGG. ASSAULT\", \"ARSON\", \"AUTO THEFT\", \"BURGLARY\", \"COMMON ASSAULT\", \"HOMICIDE\", \"LARCENY\", \"LARCENY AUTO\", \"RAPE\", \"ROBBERY - CARJACKING\", \"ROBBERY - COMMERCIAL\", \"ROBBERY - RESIDENCE\", \"ROBBERY - STREET\", \"SHOOTING\" string condition. parameter ignored description provided. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). trim Logical. Default FALSE. TRUE, area required. crs Coordinate reference system. Default 2804.","code":""},{"path":"/reference/get_area_crime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get area crimes from Open Baltimore — get_area_crime","text":"","code":"if (FALSE) { # Get shootings for the Lauraville area area <- get_area(\"neighborhood\", \"Lauraville\") crimes <-  get_area_crime(area = area, description = \"SHOOTING\") }"},{"path":"/reference/get_area_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get local or cached data for an area — get_area_data","title":"Get local or cached data for an area — get_area_data","text":"Returns data selected area areas optional buffer. crop trim FALSE, function uses st_intersects filter data include full geometry anything overlaps area bbox (area provided).","code":""},{"path":"/reference/get_area_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get local or cached data for an area — get_area_data","text":"","code":"get_area_data(   area = NULL,   bbox = NULL,   data = NULL,   extdata = NULL,   cachedata = NULL,   path = NULL,   url = NULL,   fn = NULL,   diag_ratio = NULL,   dist = NULL,   asp = NULL,   crop = TRUE,   trim = FALSE,   crs = NULL )"},{"path":"/reference/get_area_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get local or cached data for an area — get_area_data","text":"area sf object. multiple areas provided, unioned single sf object using st_union bbox bbox object defining area used filter data. area provided, bounding box ignored. data sf object including data area extdata Character. Name external geopackage (.gpkg) file included package selected data available. Available data includes \"trees\", \"unimproved_property\", \"vegetated_area\" cachedata Character. Name cached geopackage (.gpkg) file selected data available. Running cache_mapbaltimore_data() caches data \"real_property\", \"baltimore_msa_streets\", \"edge_of_pavement\" path Character. Path local remote spatial data file supported st_read url Character. URL FeatureServer MapServer layer pass get_area_esri_data. fn Function apply area data returning. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. dist buffer distance meters. Optional. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crop TRUE, data cropped area bounding box st_crop adjusted `dist`, `diag_ratio`, `asp` parameters provided. Default TRUE. trim TRUE, data trimmed area st_intersection. option supported adjusted areas use `dist`, `diag_ratio`, `asp` parameters. Default FALSE. crs Coordinate Reference System (CRS) use returned data. CRS provided data bounding box area must match one another required match CRS provided parameter.","code":""},{"path":"/reference/get_area_esri_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data from an ArcGIS FeatureServer or MapServer — get_area_esri_data","title":"Get data from an ArcGIS FeatureServer or MapServer — get_area_esri_data","text":"Wraps esri2sf::esri2sf() function download ArcGIS FeatureServer MapServer.","code":""},{"path":"/reference/get_area_esri_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data from an ArcGIS FeatureServer or MapServer — get_area_esri_data","text":"","code":"get_area_esri_data(   area = NULL,   bbox = NULL,   url = NULL,   where = \"1=1\",   type = c(\"md food stores 2017 2018\", \"farmers markets 2020\",     \"baltimore food stores 2016\", \"baltimore demolitions\", \"contour 2ft\",     \"contours 10ft\", \"open vacant building notices\", \"liquor licenses\",     \"fixed speed cameras\", \"red light cameras\", \"edge of pavement\"),   dist = NULL,   diag_ratio = NULL,   asp = NULL,   trim = FALSE,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804) )"},{"path":"/reference/get_area_esri_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data from an ArcGIS FeatureServer or MapServer — get_area_esri_data","text":"area sf object. Optional. used trim TRUE. bbox bbox object. Optional suggested avoid downloading entire layer. See st_bbox information. url FeatureServer MapServer url retrieve data . Passed url parameter esri2sf::esri2sf() function. string condition. Default 1=1 rows. type Type data get. Options include \"md food stores 2017 2018\", \"farmers markets 2020\", \"baltimore food stores 2016\", \"baltimore demolitions\", \"contour 2ft\", \"contours 10ft\", \"open vacant building notices\", \"liquor licenses\", \"fixed speed cameras\", \"red light cameras\", \"edge pavement\" dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). trim Logical. Default FALSE. TRUE, area required. crs Coordinate reference system. Default 2804.","code":""},{"path":"/reference/get_area_osm_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Open Street Map features for area — get_area_osm_data","title":"Get Open Street Map features for area — get_area_osm_data","text":"Wraps osmdata functions.","code":""},{"path":"/reference/get_area_osm_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Open Street Map features for area — get_area_osm_data","text":"","code":"get_area_osm_data(   area = NULL,   bbox = NULL,   key,   value = NULL,   return_type = c(\"osm_polygons\", \"osm_points\", \"osm_lines\", \"osm_multilines\",     \"osm_multipolygons\"),   dist = NULL,   diag_ratio = NULL,   asp = NULL,   crop = TRUE,   trim = FALSE,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804) )"},{"path":"/reference/get_area_osm_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Open Street Map features for area — get_area_osm_data","text":"area sf object. multiple areas provided, unioned single sf object using st_union bbox bbox object buffer /adjust. area provided, bbox ignored. key feature key overpass query. key \"building\" value NULL, preset list tag values used return available buildings bounding box. value feature key; can negated initial exclamation mark, value = \"!\", can also vector, value = c (\"\", \"\"). return_type Character vector length 1 geometry type return. Defaults returningpolygons. Set NULL return types. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crop Logical. Default TRUE. TRUE, use st_crop trim results area bounding box. trim Logical. Default FALSE. TRUE, use st_intersection function trim results area polygon. crs EPSG code coordinate reference system plot. Default 2804. See https://epsg.io/ information.","code":""},{"path":"/reference/get_area_permits.html","id":null,"dir":"Reference","previous_headings":"","what":"Get area building permits from Open Baltimore — get_area_permits","title":"Get area building permits from Open Baltimore — get_area_permits","text":"Get building permits 2019 present.","code":""},{"path":"/reference/get_area_permits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get area building permits from Open Baltimore — get_area_permits","text":"","code":"get_area_permits(   area,   year = 2021,   permit_type = NULL,   where = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   trim = FALSE,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804) )"},{"path":"/reference/get_area_permits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get area building permits from Open Baltimore — get_area_permits","text":"area sf object. Optional. used trim TRUE. year Year. Must 2019 later. permit_type Optional. Supported values include \"USE\", \"DEM\", \"COM\", \"BMZ\". string condition. permit_type year ignored custom `` provided. Set \"1=1\" return data years since 2019. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). trim Logical. Default FALSE. TRUE, area required. crs Coordinate reference system. Default 2804.","code":""},{"path":"/reference/get_area_property.html","id":null,"dir":"Reference","previous_headings":"","what":"Get real property data — get_area_property","title":"Get real property data — get_area_property","text":"Get showing parcels described owner occupied, non-owner occupied, vacant, unimproved. Real property parcel data Maryland State Department Assessment Taxation may include errors.","code":""},{"path":"/reference/get_area_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get real property data — get_area_property","text":"","code":"get_area_property(   area = NULL,   bbox = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   crop = TRUE,   trim = FALSE,   cache = FALSE,   ... )"},{"path":"/reference/get_area_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get real property data — get_area_property","text":"area sf object. multiple areas provided, unioned single sf object using st_union bbox bbox object defining area used filter data. area provided, bounding box ignored. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crop TRUE, data cropped area bounding box st_crop adjusted `dist`, `diag_ratio`, `asp` parameters provided. Default TRUE. trim TRUE, data trimmed area st_intersection. option supported adjusted areas use `dist`, `diag_ratio`, `asp` parameters. Default FALSE. cache TRUE, cache data mapbaltimore cache folder. Default FALSE. ... Use pass filename overwrite parameter cache_baltimore_data. Use gpkg file type.","code":""},{"path":"/reference/get_area_requests.html","id":null,"dir":"Reference","previous_headings":"","what":"Get area 311 service requests from Open Baltimore — get_area_requests","title":"Get area 311 service requests from Open Baltimore — get_area_requests","text":"Get 311 service requests specific area. Service requests   2017 2020 area available single year can requested   time. Duplicate requests removed returned data. Requests can   filtered request type, responsible city agency, . can   return multiple types agencies, using custom query parameter   calling type/agency separately.","code":""},{"path":"/reference/get_area_requests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get area 311 service requests from Open Baltimore — get_area_requests","text":"","code":"get_area_requests(   area,   year = 2021,   request_type = NULL,   agency = NULL,   where = \"1=1\",   dist = NULL,   diag_ratio = NULL,   asp = NULL,   trim = FALSE,   geometry = TRUE,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804) )"},{"path":"/reference/get_area_requests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get area 311 service requests from Open Baltimore — get_area_requests","text":"area sf object. Optional. used trim TRUE. year Year service requests. Default 2021. 2017 2022 supported. request_type Service request type. agency City agency responsible request. Options include \"Transportation\", \"BGE\", \"Solid Waste\", \"Housing\", \"Water Wastewater\", \"Health\", \"Call Center\", \"Finance\", \"Liquor Board\", \"Recreation & Parks\", \"Fire Department\", \"Parking Authority\", \"General Services\" string condition. parameter ignored request_type agency provided. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). trim Logical. Default FALSE. TRUE, area required. geometry Default TRUE. FALSE, return requests missing latitude/longitude (years prior 2021 ). crs Coordinate reference system. Default 2804.","code":""},{"path":"/reference/get_area_requests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get area 311 service requests from Open Baltimore — get_area_requests","text":"","code":"# Get dirty alley service requests for Edmondson Village in 2020 and 2021 area <- get_area(\"neighborhood\", \"Edmondson Village\")  requests <-   purrr::map_dfr(     c(2021, 2020),     ~ get_area_requests(area = area, year = .x, request_type = \"SW-Dirty Alley\")   ) #> Layer Type: Feature Layer #> Geometry Type: esriGeometryPoint #> Service Coordinate Reference System: 2248 #> Output Coordinate Reference System: 4326 #> Removing 23 duplicate 311 service requests. #> Layer Type: Table #> Error: Problem with `filter()` input `..1`. #> ℹ Input `..1` is `stringr::str_detect(sr_status, \"Duplicate\")`. #> ✖ object 'sr_status' not found"},{"path":"/reference/get_area_streets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get selected area streets — get_area_streets","title":"Get selected area streets — get_area_streets","text":"Get streets within area areas.","code":""},{"path":"/reference/get_area_streets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get selected area streets — get_area_streets","text":"","code":"get_area_streets(   area = NULL,   street_type = NULL,   sha_class = NULL,   bbox = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   trim = FALSE,   msa = FALSE,   union = TRUE )"},{"path":"/reference/get_area_streets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get selected area streets — get_area_streets","text":"area sf object area streets return. street_type selected street subtypes include. default, returned data includes subtypes except alleys (\"STRALY\"). Options include c(\"STRALY\", \"STRPRD\", \"STRR\", \"STREX\", \"STRFIC\", \"STRNDR\", \"STRURD\", \"STCLN\", \"STRTN\") sha_class selected SHA classifications include. \"\" selects streets assigned SHA classification (around one-quarter street segments). Additional options include c(\"COLL\", \"LOC\", \"MART\", \"PART\", \"FWY\", \"INT\") bbox bbox object defining area used filter data. area provided, bounding box ignored. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). trim Logical. Default FALSE. Trim streets area using `sf::st_intersection()`. msa Logical. Default FALSE. Get streets cached `baltimore_msa_streets.gpkg` file using `cachedata` parameter `get_area_data` function. union Logical. Default TRUE. Union geometry based `fullname` streets.","code":""},{"path":"/reference/get_area_vacants.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vacant building notices — get_area_vacants","title":"Get vacant building notices — get_area_vacants","text":"Parcel boundaries properties active vacant building notice. building unoccupied unsafe unfit people live work inside building, two code violations fixed, six code violations past year, building may receive vacant building notice Baltimore City.","code":""},{"path":"/reference/get_area_vacants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vacant building notices — get_area_vacants","text":"","code":"get_area_vacants(   area = NULL,   bbox = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   crop = TRUE,   trim = FALSE,   rehabbed = FALSE )"},{"path":"/reference/get_area_vacants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vacant building notices — get_area_vacants","text":"area sf object. multiple areas provided, unioned single sf object using st_union bbox bbox object defining area used filter data. area provided, bounding box ignored. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crop TRUE, data cropped area bounding box st_crop adjusted `dist`, `diag_ratio`, `asp` parameters provided. Default TRUE. trim TRUE, data trimmed area st_intersection. option supported adjusted areas use `dist`, `diag_ratio`, `asp` parameters. Default FALSE. rehabbed TRUE, return building permits pulled properties vacant building notices. Default FALSE.","code":""},{"path":"/reference/get_area_vacants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get vacant building notices — get_area_vacants","text":"rehabbed parameter TRUE, returned data use occupancy permits pulled properties vacant building notices. DHCD uses data proxy vacant building rehabs.","code":""},{"path":"/reference/get_area_zoning.html","id":null,"dir":"Reference","previous_headings":"","what":"Get zoning data for an area — get_area_zoning","title":"Get zoning data for an area — get_area_zoning","text":"Get zoning codes area within provided sf bbox object.","code":""},{"path":"/reference/get_area_zoning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get zoning data for an area — get_area_zoning","text":"","code":"get_area_zoning(   area = NULL,   bbox = NULL,   category = c(\"all\", \"residential\", \"commercial\", \"industrial\"),   diag_ratio = NULL,   dist = NULL,   asp = NULL,   crop = TRUE,   trim = FALSE,   crs = NULL,   union = FALSE )"},{"path":"/reference/get_area_zoning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get zoning data for an area — get_area_zoning","text":"area Required sf object 'name' column. bbox bbox object defining area used filter data. area provided, bounding box ignored. category Zoning category return. \"\", \"residential\", \"commercial\", \"industrial\" diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. dist buffer distance meters. Optional. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crop TRUE, data cropped area bounding box st_crop adjusted `dist`, `diag_ratio`, `asp` parameters provided. Default TRUE. trim TRUE, data trimmed area st_intersection. option supported adjusted areas use `dist`, `diag_ratio`, `asp` parameters. Default FALSE. crs Coordinate Reference System (CRS) use returned data. CRS provided data bounding box area must match one another required match CRS provided parameter. union Logical. Default FALSE. true, group zoning label combine geometry st_union.","code":""},{"path":"/reference/get_area_zoning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get zoning data for an area — get_area_zoning","text":"sf object zoning overlay data area.","code":""},{"path":"/reference/get_area_zoning.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get zoning data for an area — get_area_zoning","text":"2017 zoning data include exemptions granted Baltimore City BMZA (Board Municipal Zoning Appeals).","code":""},{"path":"/reference/get_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch load or save data for an area, street, or intersection — get_batch","title":"Batch load or save data for an area, street, or intersection — get_batch","text":"batch loading/saving function less flexible get_area_data() can reduce need repetitive calls get_area_data() gathering area-level data mapping. get_data_batch() calls get_area_data(). get_area_batch() calls get_area() using provided area location parameter.","code":""},{"path":"/reference/get_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch load or save data for an area, street, or intersection — get_batch","text":"","code":"get_data_batch(   get = NULL,   area = NULL,   label = get,   adj = list(dist = 15, diag_ratio = NULL, asp = \"6:4\"),   fn = NULL,   batch = NULL,   crop = TRUE,   trim = FALSE,   load = TRUE,   cache = FALSE,   save = FALSE,   filetype = \"geojson\",   ... )  get_area_batch(   get = NULL,   area = NULL,   label = get,   adj = list(dist = 15, diag_ratio = NULL, asp = \"6:4\"),   fn = NULL,   batch = c(\"neighborhood\", \"council district\", \"csa\", \"tract\"),   trim = FALSE,   load = TRUE,   save = FALSE,   cache = FALSE,   filetype = \"geojson\",   ... )"},{"path":"/reference/get_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch load or save data for an area, street, or intersection — get_batch","text":"get Type geography use setting area data load save. Supported values area \"area\", \"street\", \"intersection\". Default: NULL area sf object use instead getting area, street, intersection. used get NULL. label Label use loaded objects saved files, Defaults get parameter. adj Named list parameters used adjust_bbox() create bounding box area, street, intersection. Set NULL use area (use another sf object other_area parameter) Default: list(dist = 15, diag_ratio = NULL, asp = \"6:4\"). fn Function apply area returning . Useful applying buffer street creating walking distance isochrone use bounding box intersection. batch character string named list. using get_area_batch(), batch must character vector list type(s) area supported get_area(). area intersecting area adjusted area returned. Default: \"neighborhood\", \"council district\", \"csa\", \"tract\" using get_data_batch(), batch must character vector matching one spatial datasets included mapbaltimore package cached advance. \"osm_buildings\" special supported parameter calls get_area_osm_buildings() return building footprints bounding box. Default: c(\"streets\", \"parks\", \"zoning\", \"hmt_2017\", \"mta_bus_lines\", \"mta_bus_stops\", \"trees\", \"vegetated_area\", \"unimproved_property\"). named list list items sf objects, supported character strings, valid URLs ArcGIS FeatureServer MapServer layers also supported. Default: NULL crop FALSE, return data intersects bounding box area, street, intersection crop bounding box. parameter supported get_area_batch(). Default: TRUE. trim TRUE (adj NULL), trim data area, street, intersection. Default: FALSE. load TRUE, load datasets global environment, Default: TRUE cache TRUE, cache datasets package cache folder cache_baltimore_data(). Default FALSE. save TRUE, save selected areas datasets locally file (using filetype parameter file extension)., Default: FALSE filetype File extension supported sf::write_sf(), Default: 'geojson' ... Parameters passed get_area(), get_streets(), get_intersection() depending value get parameter.","code":""},{"path":"/reference/get_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch load or save data for an area, street, or intersection — get_batch","text":"","code":"if (FALSE) { if(interactive()){ # Load streets and cached edge of pavement data for the Harwood neighborhood  get_data_batch(   get = \"area\",   label = \"harwood\",   type = \"neighborhood\",   area_name = \"Harwood\",   batch = c(\"streets\", \"edge_of_pavement\"),   load = TRUE,   save = FALSE)   # Save parks, trees, and vegetated area w/in 800 meters  # of the intersection of E. Pratt and Light Sts. to GeoJSON files  get_data_batch(   get = \"intersection\",   street_names = \"E PRATT ST & LIGHT ST\",   adj = list(dist = 0, diag_ratio = NULL, asp = \"1:1\"),   dist = 800,   batch = c(\"parks\", \"trees\", \"vegetated_area\")  )  } }"},{"path":"/reference/get_intersection.html","id":null,"dir":"Reference","previous_headings":"","what":"Get intersections — get_intersection","title":"Get intersections — get_intersection","text":"Get intersections name id option apply buffer   return streets edgement pavement instead intersection.","code":""},{"path":"/reference/get_intersection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get intersections — get_intersection","text":"","code":"get_intersection(   street_names = NULL,   id = NULL,   dist = 25,   type = c(\"area\", \"edge_of_pavement\", \"streets\"),   trim = TRUE )"},{"path":"/reference/get_intersection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get intersections — get_intersection","text":"street_names street names matching one names `named_intersections` data. id id values corresponding one id values `named_intersections` data. dist buffer distance meters. Optional. type Type data return. \"area\" returns intersection center `dist` 0 circle centered intersection center positive dist value. \"edge_of_pavement\" \"streets\" return either cached edge pavement data street center line data. trim type \"edge_of_pavement\" \"streets\" `trim` TRUE return data trimmed buffered intersection, otherwise return data within bounding box, Default: TRUE","code":""},{"path":"/reference/get_intersection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get intersections — get_intersection","text":"Intersection center point, buffered area around intersection center,   streets, edge pavement data.","code":""},{"path":"/reference/get_intersection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get intersections — get_intersection","text":"","code":"get_intersection(street_names = \"Overton St & S Chapelgate Lane\", dist = 30) #> Simple feature collection with 1 feature and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 425908.6 ymin: 178921.1 xmax: 425968.6 ymax: 178981.1 #> Projected CRS: NAD83(HARN) / Maryland #>      id                           name                       geometry #> 1 74958 OVERTON ST & S CHAPELGATE LANE POLYGON ((425968.6 178951.1...  get_intersection(id = \"41758\", dist = 425, type = \"streets\", trim = FALSE) #> Simple feature collection with 24 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: 426946.1 ymin: 183801.4 xmax: 427796.1 ymax: 184651.4 #> Projected CRS: NAD83(HARN) / Maryland #> # A tibble: 24 × 2 #>    fullname                                                             geometry #>    <chr>                                                          <GEOMETRY [m]> #>  1 AYRDALE AVE     MULTILINESTRING ((427500.7 184350.6, 427519.8 184401.4, 4275… #>  2 BERWYN AVE      MULTILINESTRING ((427320.1 184345.5, 427316.2 184354.4, 4272… #>  3 BONNER ROAD     MULTILINESTRING ((427498.7 183952.1, 427452.1 183933.2), (42… #>  4 CALLAWAY AVE    MULTILINESTRING ((427649.7 184179.8, 427669.5 184231.9), (42… #>  5 CARSDALE AVE    MULTILINESTRING ((427140 184486.7, 427142.1 184493.4, 427150… #>  6 CHATHAM ROAD    LINESTRING (427796.1 184595, 427750.6 184613.7, 427653.8 184… #>  7 CHELSEA TERR    MULTILINESTRING ((427377.2 183849.8, 427371.9 183861.5), (42… #>  8 COPLEY ROAD     MULTILINESTRING ((427789 184237.7, 427795.1 184249.4), (4277… #>  9 DORCHESTER ROAD MULTILINESTRING ((427384.2 184635.1, 427349.6 184635.1, 4273… #> 10 EGERTON ROAD    MULTILINESTRING ((427732.9 184385.1, 427723 184388.7), (4277… #> # … with 14 more rows"},{"path":"/reference/get_maryland_open_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dataset from Maryland Open Data portal with optional SoQL parameters — get_maryland_open_resource","title":"Get dataset from Maryland Open Data portal with optional SoQL parameters — get_maryland_open_resource","text":"Get selected dataset using Socrata Query Language (SoQL) parameters tibble sf object. Details SoQL queries found Socrata API documentation https://dev.socrata.com/docs/queries/","code":""},{"path":"/reference/get_maryland_open_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dataset from Maryland Open Data portal with optional SoQL parameters — get_maryland_open_resource","text":"","code":"get_maryland_open_resource(   resource = NULL,   select = NULL,   where = NULL,   query = NULL,   geometry = FALSE,   area = NULL,   bbox = NULL,   longitude = \"longitude\",   latitude = \"latitude\",   trim = FALSE,   key = Sys.getenv(\"MARYLAND_OPEN_DATA_API_KEY\"),   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804) )"},{"path":"/reference/get_maryland_open_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dataset from Maryland Open Data portal with optional SoQL parameters — get_maryland_open_resource","text":"resource Socrata dataset identifier selected dataset Maryland's Open Data portal select SODA $select parameter. Set columns returned, similar SELECT SQL. https://dev.socrata.com/docs/queries/select.html SODA $parameter. Filters rows returned, similar . https://dev.socrata.com/docs/queries/.html query SODA $query parameter. full SoQL query string, one parameter. https://dev.socrata.com/docs/queries/query.html geometry TRUE latitude/longitude columns available, return sf object. Default FALSE. area sf object used generate bbox (used bbox NULL). Required use trim parameter. Default NULL. bbox bbox object generate query non-spatial resources latitude longitude columns. Default NULL. longitude Name column containing longitude data, Default: 'longitude' latitude Name column containing latitude data, Default: 'latitude' trim area provided, trim data area boundary rather bounding box, Default: FALSE. area must provided TRUE. crs Coordinate reference system return.","code":""},{"path":"/reference/get_maryland_open_resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get dataset from Maryland Open Data portal with optional SoQL parameters — get_maryland_open_resource","text":"","code":"if (FALSE) { ## Get Q2 2020 vehicle crash data for Cecil County, Maryland get_maryland_open_resource(   resource = \"65du-s3qu\",   where = \"(year = '2020') AND (quarter = 'Q2') AND county_desc like 'Cecil'\" ) }"},{"path":"/reference/get_nearby_areas.html","id":null,"dir":"Reference","previous_headings":"","what":"Get nearby areas — get_nearby_areas","title":"Get nearby areas — get_nearby_areas","text":"Return areas selected type within set distance another area.","code":""},{"path":"/reference/get_nearby_areas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get nearby areas — get_nearby_areas","text":"","code":"get_nearby_areas(   area,   type = c(\"neighborhood\", \"council district\", \"legislative district\",     \"congressional district\", \"planning district\", \"police district\", \"csa\",     \"park district\"),   dist = 1,   exclude_area = TRUE,   residential = FALSE )"},{"path":"/reference/get_nearby_areas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get nearby areas — get_nearby_areas","text":"area sf object. Must name column exclude_area work. type Required. Supported values include \"neighborhood\", \"council district\", \"legislative district\", \"congressional district\", \"planning district\", \"police district\", \"csa\", \"park district\". type may different type area provided. dist Distance meters matching nearby areas. Default 1 meter. exclude_area Logical. Default TRUE. FALSE, include areas provided area (assuming areas provide type parameter provided get_nearby_areas). residential Logical. Default FALSE. type neighborhood, set TRUE return residential neighborhoods (excluding industrial areas, business parks, parks/reservoirs).","code":""},{"path":"/reference/get_streets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get streets — get_streets","title":"Get streets — get_streets","text":"Get streets Baltimore City name option exclude streets name, crop bounding box, filter selected street types functional classifications.","code":""},{"path":"/reference/get_streets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get streets — get_streets","text":"","code":"get_streets(   street_name = NULL,   exclude_name = NULL,   street_type = NULL,   sha_class = NULL,   block_num = NULL,   bbox = NULL,   union = TRUE )"},{"path":"/reference/get_streets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get streets — get_streets","text":"street_name Street names return. Required. exclude_name Street names exclude street_type selected street subtypes include. default, returned data includes subtypes except alleys (\"STRALY\"). Options include c(\"STRALY\", \"STRPRD\", \"STRR\", \"STREX\", \"STRFIC\", \"STRNDR\", \"STRURD\", \"STCLN\", \"STRTN\"). supported sha_class selected SHA classifications include. \"\" selects streets assigned SHA classification (around one-quarter street segments). Additional options include c(\"COLL\", \"LOC\", \"MART\", \"PART\", \"FWY\", \"INT\") block_num Integer vector block number c(300) range block numbers (c(100, 500)) filter streets. bbox bbox crop returned streets. Optional. union Logical. `TRUE`, use st_union combine geometry `fullname` streets.","code":""},{"path":"/reference/get_streets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get streets — get_streets","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/get_streets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get streets — get_streets","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/get_streets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get streets — get_streets","text":"","code":"get_streets(street_name = \"UNIVERSITY PKWY\") #> Simple feature collection with 2 features and 1 field #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431490.7 ymin: 184537.1 xmax: 433526.9 ymax: 186030.6 #> Projected CRS: NAD83(HARN) / Maryland #> # A tibble: 2 × 2 #>   fullname                                                              geometry #>   <chr>                                                    <MULTILINESTRING [m]> #> 1 E UNIVERSITY PKWY ((433012.2 184928.3, 433040.2 184906.5, 433058.1 184891.7, … #> 2 W UNIVERSITY PKWY ((431490.7 186021.5, 431503.9 186030.6), (432938.4 185006.9…  get_streets(street_name = c(\"E FAYETTE\", \"ORLEANS\"), block_num = c(1700, 3600)) #> Warning: attribute variables are assumed to be spatially constant throughout all geometries #> Simple feature collection with 2 features and 1 field #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 435026.7 ymin: 180717.9 xmax: 437393.1 ymax: 180941.1 #> Projected CRS: NAD83(HARN) / Maryland #> # A tibble: 2 × 2 #>   fullname                                                              geometry #>   <chr>                                                    <MULTILINESTRING [m]> #> 1 E FAYETTE ST ((436092.7 180775.4, 436117.4 180777), (435315.1 180732.7, 43537… #> 2 ORLEANS ST   ((435026.7 180867.6, 435088.5 180870.3, 435123.3 180872.4, 43513…"},{"path":"/reference/hmt_2017.html","id":null,"dir":"Reference","previous_headings":"","what":"Housing Market Typology 2017 — hmt_2017","title":"Housing Market Typology 2017 — hmt_2017","text":"2017 update City’s Housing Market Typology jointly developed Baltimore City Planning Department, Department Housing & Community Development, Reinvestment Fund.","code":""},{"path":"/reference/hmt_2017.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Housing Market Typology 2017 — hmt_2017","text":"","code":"hmt_2017"},{"path":"/reference/hmt_2017.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Housing Market Typology 2017 — hmt_2017","text":"data frame 663 rows 15 variables: geoid U.S. Census Block Group GeoID geoid_part Identifier U.S. Census Block Group GeoID including part identifier part Part identifier cluster Housing market cluster cluster_group Housing market cluster median_sales_price Median sales price, Q3 2015 - Q2 2017 sales_price_variation Sales price variation, Q3 2015 - Q2 2017 num_sales Number residential sales, Q3 2015 - Q2 2017 num_foreclosure_filings Number foreclosure filings, Q3 2015 - Q2 2017 perc_foreclosure_sales Percent sales foreclosure, Q3 2015 - Q2 2017 perc_homeowners Percent owner occupied, July 2017 perc_permits_over10k Percent residential building permits $10,000, Q3 2015 - Q2 2017 vacant_lots_bldgs_per_acre_res Vacant lots buildings per residential acre, July 2017 units_per_acre_res Housing units per residential acre, July 2017 geometry Multipolygon geometry matching Census blocks groups parts block groups","code":""},{"path":"/reference/hmt_2017.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Housing Market Typology 2017 — hmt_2017","text":"https://opendata.baltimorecity.gov/egis/rest/services/Hosted/Housing_Market_Typology_2017/FeatureServer/0","code":""},{"path":"/reference/layer_area_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer for area data — layer_area_data","title":"Layer for area data — layer_area_data","text":"Layer ggplot show data area area bbox.","code":""},{"path":"/reference/layer_area_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer for area data — layer_area_data","text":"","code":"layer_area_data(   area = NULL,   bbox = NULL,   data = NULL,   extdata = NULL,   cachedata = NULL,   path = NULL,   url = NULL,   fn = NULL,   asis = FALSE,   diag_ratio = NULL,   dist = NULL,   asp = NULL,   crop = TRUE,   trim = FALSE,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804),   mapping = aes(),   inherit.aes = TRUE,   show_mask = FALSE,   show_area = FALSE,   area_aes = list(color = \"gray30\"),   layer_after = NULL,   ... )"},{"path":"/reference/layer_area_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer for area data — layer_area_data","text":"area sf object. multiple areas provided, unioned single sf object using st_union bbox bbox object defining area used filter data. area provided, bounding box ignored. data sf object including data area extdata Character. Name external geopackage (.gpkg) file included package selected data available. Available data includes \"trees\", \"unimproved_property\", \"vegetated_area\" cachedata Character. Name cached geopackage (.gpkg) file selected data available. Running cache_mapbaltimore_data() caches data \"real_property\", \"baltimore_msa_streets\", \"edge_of_pavement\" path Character. Path local remote spatial data file supported st_read url Character. URL FeatureServer MapServer layer pass get_area_esri_data. fn Function apply area data returning. asis Logical. Default FALSE. TRUE, use inherited data without cropping area. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. dist buffer distance meters. Optional. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crop TRUE, data cropped area bounding box st_crop adjusted `dist`, `diag_ratio`, `asp` parameters provided. Default TRUE. trim TRUE, data trimmed area st_intersection. option supported adjusted areas use `dist`, `diag_ratio`, `asp` parameters. Default FALSE. crs Coordinate Reference System (CRS) use returned data. CRS provided data bounding box area must match one another required match CRS provided parameter. show_mask Logical. Default FALSE. TRUE, add mask using layer_area_mask show_area Logical. Default FALSE. TRUE, add outline area layer. area_aes List fixed aesthetics area layer. Default list(color = \"gray30\", fill = NA). Supported aesthetics include color, fill, linetype, alpha, size. Defaults color = \"gray30\", fill = NA, size = 0.75, alpha = 1, linetype = 0. Default aesthetics geom_sf ignored. layer_after ggplot objects append end data, mask, area layer list. intended used append scales, guides, labels related data layer. ... Arguments passed ggplot2::geom_sf, ggplot2::geom_sf mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/layer_area_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Layer for area data — layer_area_data","text":"Combines get_area_data geom_sf single call. Inherits data ggplot() data, extdata, cachedata left NULL. Set asis TRUE keep data crop area modified area. Optionally can combine data layer mask layer, area layer, additional number layers three. appearance area layer can modified fixed aesthetics using area_aes parameter. Fixed aesthetics data layer can added additional parameters.","code":""},{"path":"/reference/layer_area_data.html","id":"predefined-layers","dir":"Reference","previous_headings":"","what":"Predefined layers","title":"Layer for area data — layer_area_data","text":"NA","code":""},{"path":"/reference/layer_area_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an area mask to a ggplot2 map as a layer — layer_area_mask","title":"Add an area mask to a ggplot2 map as a layer — layer_area_mask","text":"Returns mask area areas  sf object. function can called function uses logical mask parameter.","code":""},{"path":"/reference/layer_area_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an area mask to a ggplot2 map as a layer — layer_area_mask","text":"","code":"layer_area_mask(   area = NULL,   diag_ratio = NULL,   dist = NULL,   asp = NULL,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804),   mask_bbox = NULL,   ... )"},{"path":"/reference/layer_area_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an area mask to a ggplot2 map as a layer — layer_area_mask","text":"area sf object. Required. multiple areas provided, areas combined single geometry st_union diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. dist buffer distance meters. Optional. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crs Coordinate reference system bounding box return mask_bbox bbox object define edge mask. diag_ratio, dist, asp parameters ignored mask_bbox provided. ... Additional parameters pass geom_sf","code":""},{"path":"/reference/layer_area_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an area mask to a ggplot2 map as a layer — layer_area_mask","text":"geom_sf function.","code":""},{"path":"/reference/layer_area_property.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a layer to a gpplot2 map with area property categorized by type — layer_area_property","title":"Add a layer to a gpplot2 map with area property categorized by type — layer_area_property","text":"Real property parcel data Maryland State Department Assessment Taxation may include outdated inaccurate information.","code":""},{"path":"/reference/layer_area_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a layer to a gpplot2 map with area property categorized by type — layer_area_property","text":"","code":"layer_area_property(   area = NULL,   bbox = NULL,   data = NULL,   type = c(\"improved\", \"vacant\", \"principal residence\", \"use\", \"building type\",     \"value\"),   asis = FALSE,   diag_ratio = NULL,   dist = NULL,   asp = NULL,   crop = TRUE,   trim = FALSE,   show_area = FALSE,   show_mask = FALSE,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804),   ... )"},{"path":"/reference/layer_area_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a layer to a gpplot2 map with area property categorized by type — layer_area_property","text":"area sf object. multiple areas provided, unioned single sf object using st_union bbox bbox object defining area used filter data. area provided, bounding box ignored. data sf object including data area type Real property variable map. Options include c(\"improved\", \"vacant\", \"principal residence\", \"value\"). Currently supports one variable time. asis Logical. Default FALSE. TRUE, use inherited data without cropping area. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. dist buffer distance meters. Optional. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crop TRUE, data cropped area bounding box st_crop adjusted `dist`, `diag_ratio`, `asp` parameters provided. Default TRUE. trim TRUE, data trimmed area st_intersection. option supported adjusted areas use `dist`, `diag_ratio`, `asp` parameters. Default FALSE. show_area Logical. Default FALSE. TRUE, add outline area layer. show_mask Logical. Default FALSE. TRUE, add mask using layer_area_mask crs Coordinate Reference System (CRS) use returned data. CRS provided data bounding box area must match one another required match CRS provided parameter. ... passed geom_sf data layer.","code":""},{"path":[]},{"path":"/reference/layer_area_property.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a layer to a gpplot2 map with area property categorized by type — layer_area_property","text":"","code":"if (FALSE) { area <- get_area(\"neighborhood\", \"West Forest Park\")  property <- get_area_property(area = area)  ggplot2::ggplot() +   layer_area_property(area = area, data = property, type = \"principal residence\") }"},{"path":"/reference/layer_area_streets.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a layer to a gpplot2 map with area streets, street names, or both — layer_area_streets","title":"Add a layer to a gpplot2 map with area streets, street names, or both — layer_area_streets","text":"Add layer gpplot2 map area streets, street names, .","code":""},{"path":"/reference/layer_area_streets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a layer to a gpplot2 map with area streets, street names, or both — layer_area_streets","text":"","code":"layer_area_streets(   area = NULL,   street_type = NULL,   sha_class = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   trim = FALSE,   msa = FALSE,   show_streets = TRUE,   show_names = FALSE,   name_location = NULL,   edge_dist = 10,   color = \"gray40\",   size = 1,   ... )"},{"path":"/reference/layer_area_streets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a layer to a gpplot2 map with area streets, street names, or both — layer_area_streets","text":"area sf object. Returns streets within area (adjustment dist, diag_ratio, asp parameters) street_type selected street subtypes include. default, returned data includes subtypes except alleys (\"STRALY\"). Options include c(\"STRALY\", \"STRPRD\", \"STRR\", \"STREX\", \"STRFIC\", \"STRNDR\", \"STRURD\", \"STCLN\", \"STRTN\") sha_class selected SHA classifications include. \"\" selects streets assigned SHA classification (around one-quarter street segments). Additional options include c(\"COLL\", \"LOC\", \"MART\", \"PART\", \"FWY\", \"INT\") dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). trim Logical. Default FALSE. Trim streets area using `sf::st_intersection()`. msa Logical. Default FALSE. Get streets cached `baltimore_msa_streets.gpkg` file using `cachedata` parameter `get_area_data` function. show_streets Logical. Default TRUE. FALSE, hides street center lines. show_names Logical. Default FALSE. TRUE, shows street names. name_location Options include c(\"area\", \"edge\", \"top\", \"left\", \"bottom\", \"right\", \"topleft\", \"topright\", \"bottomleft\", \"bottomright\"). Defaults NULL. edge_dist Distance buffer use placing street names. color Color streets /text street name labels. size Size streets /street name labels. ... parameters pass along `ggplot2::geom_sf()` maps streets.","code":""},{"path":"/reference/legislative_districts.html","id":null,"dir":"Reference","previous_headings":"","what":"Maryland Legislative Districts for Baltimore City — legislative_districts","title":"Maryland Legislative Districts for Baltimore City — legislative_districts","text":"...","code":""},{"path":"/reference/legislative_districts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maryland Legislative Districts for Baltimore City — legislative_districts","text":"","code":"legislative_districts"},{"path":"/reference/legislative_districts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Maryland Legislative Districts for Baltimore City — legislative_districts","text":"data frame 6 rows 4 variables: name District name id District number label District label geometry Multipolygon data district boundaries","code":""},{"path":"/reference/legislative_districts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Maryland Legislative Districts for Baltimore City — legislative_districts","text":"https://geodata.md.gov/imap/rest/services/Boundaries/MD_ElectionBoundaries/FeatureServer/1","code":""},{"path":"/reference/map_area_bcps_programs.html","id":null,"dir":"Reference","previous_headings":"","what":"Map BCPS programs and attendance zones for a local area — map_area_bcps_programs","title":"Map BCPS programs and attendance zones for a local area — map_area_bcps_programs","text":"Map showing BCPS school zones overlap provided area areas. area sf tibble includes multiple areas, separate map created area provided.","code":""},{"path":"/reference/map_area_bcps_programs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map BCPS programs and attendance zones for a local area — map_area_bcps_programs","text":"","code":"map_area_bcps_programs(area)"},{"path":"/reference/map_area_bcps_programs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map BCPS programs and attendance zones for a local area — map_area_bcps_programs","text":"area sf object","code":""},{"path":"/reference/map_area_bcps_programs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map BCPS programs and attendance zones for a local area — map_area_bcps_programs","text":"","code":"if (FALSE) { ## Map school attendance boundary zones for the Madison Park neighborhood madisonpark <- get_area(area_type = \"neighborhood\", area_name = \"Madison Park\") map_area_bcps_programs(area = madisonpark) }  if (FALSE) { ## Map school attendance boundary zones for City Council District 2 district9 <- get_area(   type = \"council district\",   area_name = \"9\" ) map_area_bcps_programs(area = district9) }"},{"path":"/reference/map_area_highlighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Maps a highlighted area within the context of multiple areas — map_area_highlighted","title":"Maps a highlighted area within the context of multiple areas — map_area_highlighted","text":"Map highlighting location area context multiple areas.","code":""},{"path":"/reference/map_area_highlighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maps a highlighted area within the context of multiple areas — map_area_highlighted","text":"","code":"map_area_highlighted(area, highlight_name = \"all\")"},{"path":"/reference/map_area_highlighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maps a highlighted area within the context of multiple areas — map_area_highlighted","text":"area Required sf object 'name' column. highlight_name Character vector. Required. Use \"\" create grid maps highlighting area provided sf object provide name one areas highlight.","code":""},{"path":"/reference/map_area_in_areas.html","id":null,"dir":"Reference","previous_headings":"","what":"Map area within selected overlapping areas — map_area_in_areas","title":"Map area within selected overlapping areas — map_area_in_areas","text":"Map area areas within selected overlapping areas.","code":""},{"path":"/reference/map_area_in_areas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map area within selected overlapping areas — map_area_in_areas","text":"","code":"map_area_in_areas(   area,   type = c(\"neighborhood\", \"council district\", \"legislative district\",     \"congressional district\", \"planning district\", \"police district\", \"csa\"),   show_area = TRUE,   show_label = FALSE,   background = NULL )"},{"path":"/reference/map_area_in_areas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map area within selected overlapping areas — map_area_in_areas","text":"area sf object. Required type Type area map. Supports types get_area function. show_area Logical. Default TRUE. show_label Logical. Default FALSE. TRUE, label areas ggplot2::geom_sf_label() background ggplot layer. Default NULL. Passing ggplot2 layer may necessary appropriate background congressional district maps.","code":""},{"path":"/reference/map_area_in_city.html","id":null,"dir":"Reference","previous_headings":"","what":"Map area in the context of city boundaries — map_area_in_city","title":"Map area in the context of city boundaries — map_area_in_city","text":"Map showing location area within city.","code":""},{"path":"/reference/map_area_in_city.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map area in the context of city boundaries — map_area_in_city","text":"","code":"map_area_in_city(area, area_label = NULL)"},{"path":"/reference/map_area_in_city.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map area in the context of city boundaries — map_area_in_city","text":"area sf object 'name' column. Required. area_label area label replace area name. Optional.","code":""},{"path":"/reference/map_area_in_city.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map area in the context of city boundaries — map_area_in_city","text":"","code":"if (FALSE) { ## Area with a defined label district2 <- get_area(   type = \"council district\",   area_id = \"2\" )  map_area_in_city(   area = district2,   area_label = \"Baltimore's Second Council District\" ) }  if (FALSE) { ## Multiple areas in a single map selected_se_neighborhoods <- get_area(   type = \"neighborhood\",   area_name = c(\"Upper Fells Point\", \"Fells Point\", \"Canton\") )  map_area_in_city(   area = selected_se_neighborhoods,   area_label = \"Southeast Baltimore neighborhoods\" ) }  if (FALSE) { ## Area with a defined map title canton_industrial <- get_area(   type = \"neighborhood\",   area_name = \"Canton Industrial Area\" )  map_area_in_city(area = canton_industrial) }"},{"path":"/reference/map_area_mta_services.html","id":null,"dir":"Reference","previous_headings":"","what":"Map MTA services — map_area_mta_services","title":"Map MTA services — map_area_mta_services","text":"Map MTA services. MTA bus lines currently supported service.","code":""},{"path":"/reference/map_area_mta_services.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map MTA services — map_area_mta_services","text":"","code":"map_area_mta_services(   area,   mta_services = \"bus_lines\",   diag_ratio = 0.166,   asp = NULL )"},{"path":"/reference/map_area_mta_services.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map MTA services — map_area_mta_services","text":"area sf object. Required. mta_services Character vector. Default \"bus_lines\" use mta_bus_lines data. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\").","code":""},{"path":"/reference/map_area_parks.html","id":null,"dir":"Reference","previous_headings":"","what":"Map area parks and open spaces — map_area_parks","title":"Map area parks and open spaces — map_area_parks","text":"Return ggplot map showing parks around selected area.","code":""},{"path":"/reference/map_area_parks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map area parks and open spaces — map_area_parks","text":"","code":"map_area_parks(   area,   type = c(\"parks\", \"vacant lots\"),   label = c(\"parks\"),   dist = NULL,   diag_ratio = 0.125,   asp = NULL )"},{"path":"/reference/map_area_parks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map area parks and open spaces — map_area_parks","text":"area sf object. Required. type layers show map (\"parks\" \"vacant lots\"). Defaults . label layers label. \"parks\" supported. Use value exclude labels. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\").","code":""},{"path":"/reference/map_area_property.html","id":null,"dir":"Reference","previous_headings":"","what":"Real property or parcel data is from the Maryland State Department of\nAssessment and Taxation and may include outdated or inaccurate information. — map_area_property","title":"Real property or parcel data is from the Maryland State Department of\nAssessment and Taxation and may include outdated or inaccurate information. — map_area_property","text":"Real property parcel data Maryland State Department Assessment Taxation may include outdated inaccurate information.","code":""},{"path":"/reference/map_area_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Real property or parcel data is from the Maryland State Department of\nAssessment and Taxation and may include outdated or inaccurate information. — map_area_property","text":"","code":"map_area_property(   area,   property = c(\"improved\", \"vacant\", \"principal residence\", \"use\", \"building type\",     \"value\"),   dist = NULL,   diag_ratio = 0.1,   asp = NULL,   trim = FALSE,   show_mask = FALSE )"},{"path":"/reference/map_area_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Real property or parcel data is from the Maryland State Department of\nAssessment and Taxation and may include outdated or inaccurate information. — map_area_property","text":"area Simple features object. Function currently supports single area time. property Real property variable map. Options include c(\"improved\", \"vacant\", \"principal residence\", \"value\"). Currently supports one variable time. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). trim TRUE, data trimmed area st_intersection. option supported adjusted areas use `dist`, `diag_ratio`, `asp` parameters. Default FALSE. show_mask TRUE, apply white, 0.6 alpha mask property located outside provided area. Default `FALSE.`","code":""},{"path":"/reference/map_area_zoning.html","id":null,"dir":"Reference","previous_headings":"","what":"Map zoning for an area — map_area_zoning","title":"Map zoning for an area — map_area_zoning","text":"Map zoning/zoning overlay codes area within city. 2017 zoning data include exemptions granted BMZA (Board Municipal Zoning Appeals).","code":""},{"path":"/reference/map_area_zoning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map zoning for an area — map_area_zoning","text":"","code":"map_area_zoning(   area,   category = c(\"all\", \"residential\", \"commercial\", \"industrial\"),   diag_ratio = 0.125,   asp = NULL,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804) )"},{"path":"/reference/map_area_zoning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map zoning for an area — map_area_zoning","text":"area Required sf object 'name' column. category Zoning category return. \"\", \"residential\", \"commercial\", \"industrial\" diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crs Coordinate Reference System (CRS) use returned data. CRS provided data bounding box area must match one another required match CRS provided parameter.","code":""},{"path":"/reference/map_area_zoning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map zoning for an area — map_area_zoning","text":"","code":"examples/map_area_zoning.R #> Error in eval(expr, envir, enclos): object 'examples' not found"},{"path":"/reference/mapbaltimore-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mapbaltimore: Make maps for Baltimore City with open data — mapbaltimore-package","title":"mapbaltimore: Make maps for Baltimore City with open data — mapbaltimore-package","text":"package provides data Baltimore City, state Maryland, sources, functions access additional data, function create modify simple maps Baltimore neighborhoods using sf ggplot2.","code":""},{"path":"/reference/maryland_open_data_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Install a Maryland Open Data Portal API Key in Your .Renviron File for Repeated Use — maryland_open_data_api_key","title":"Install a Maryland Open Data Portal API Key in Your .Renviron File for Repeated Use — maryland_open_data_api_key","text":"function add Maryland Open Data Portal API key .Renviron file can called securely without stored code. installed key, can called time typing Sys.getenv(\"MARYLAND_OPEN_DATA_API_KEY\") can used package functions simply typing MARYLAND_OPEN_DATA_API_KEY .Renviron file, function create . already .Renviron file, function append key existing file, making backup original file disaster recovery purposes.","code":""},{"path":"/reference/maryland_open_data_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install a Maryland Open Data Portal API Key in Your .Renviron File for Repeated Use — maryland_open_data_api_key","text":"","code":"maryland_open_data_api_key(key, overwrite = FALSE, install = FALSE)"},{"path":"/reference/maryland_open_data_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install a Maryland Open Data Portal API Key in Your .Renviron File for Repeated Use — maryland_open_data_api_key","text":"key API key provided Maryland Open Data Portal formatted quotes. key created signing https://imap.maryland.gov/Pages/open-data-portal-signup.aspx overwrite set TRUE, overwrite existing MARYLAND_OPEN_DATA_API_KEY already .Renviron file. install TRUE, install key .Renviron file use future sessions.  Defaults FALSE.","code":""},{"path":"/reference/maryland_open_data_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install a Maryland Open Data Portal API Key in Your .Renviron File for Repeated Use — maryland_open_data_api_key","text":"","code":"if (FALSE) { MARYLAND_OPEN_DATA_API_KEY(\"111111abc\", install = TRUE) # First time, reload your environment so you can use the key without restarting R. readRenviron(\"~/.Renviron\") # You can check it with: Sys.getenv(\"MARYLAND_OPEN_DATA_API_KEY\") }  if (FALSE) { # If you need to overwrite an existing key: MARYLAND_OPEN_DATA_API_KEY(\"111111abc\", overwrite = TRUE, install = TRUE) # First time, relead your environment so you can use the key without restarting R. readRenviron(\"~/.Renviron\") # You can check it with: Sys.getenv(\"MARYLAND_OPEN_DATA_API_KEY\") }"},{"path":"/reference/mta_bus_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Maryland Transit Administration (MTA) Bus Routes — mta_bus_lines","title":"Maryland Transit Administration (MTA) Bus Routes — mta_bus_lines","text":"Maryland Department Transportation's Maryland Transit Administration Summer 2020 Bus Routes including CityLink, LocalLink Commuter Bus. data reflect bus route changes July 12, 2020.","code":""},{"path":"/reference/mta_bus_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maryland Transit Administration (MTA) Bus Routes — mta_bus_lines","text":"","code":"mta_bus_lines"},{"path":"/reference/mta_bus_lines.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Maryland Transit Administration (MTA) Bus Routes — mta_bus_lines","text":"data frame 103 rows 4 variables: route_name Name bus route route_type Type route, CityLink, LocalLink Commuter Bus route_number Unique route number color identifier route_abb Route abbreviation (different color CityLink routes) frequent Logical indicator route inclusion MTA BaltimoreLink's Frequent Transit Network. geometry Multilinestring bus route path","code":""},{"path":"/reference/mta_bus_lines.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Maryland Transit Administration (MTA) Bus Routes — mta_bus_lines","text":"Maryland Transit - MTA Bus Lines (MD iMap)","code":""},{"path":"/reference/mta_bus_stops.html","id":null,"dir":"Reference","previous_headings":"","what":"Maryland Transit Administration (MTA) Bus Stops — mta_bus_stops","title":"Maryland Transit Administration (MTA) Bus Stops — mta_bus_stops","text":"Maryland Department Transportation's Maryland Transit   Administration Bus Stops including CityLink, LocalLink Commuter Bus.   data based Summer 2020 schedule effective July 12, 2020.   Ridership data based upon Automatic Passenger Counting (APC) system   average daily weekday bus stop ridership (boarding, alighting, total)   Spring 2019 schedule period exclude outliers.","code":""},{"path":"/reference/mta_bus_stops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maryland Transit Administration (MTA) Bus Stops — mta_bus_stops","text":"","code":"mta_bus_stops"},{"path":"/reference/mta_bus_stops.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Maryland Transit Administration (MTA) Bus Stops — mta_bus_stops","text":"data frame 4426 rows 11 variables: stop_id Stop identification number stop_name Stop name rider_on Average daily weekday count riders boarding transit stop rider_off Average daily weekday count riders alighting transit stop rider_total Average daily weekday count total riders served stop stop_ridership_rank Stop rank ridership routes_served Routes served stop mode Mode served stop shelter Logical indicator bus shelter availability county County stop located geometry Point location stop","code":""},{"path":"/reference/mta_bus_stops.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Maryland Transit Administration (MTA) Bus Stops — mta_bus_stops","text":"Maryland Transit - MTA Bus Stops (MD iMap)","code":""},{"path":"/reference/mta_light_rail_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_lines","title":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_lines","text":"DATASET_DESCRIPTION","code":""},{"path":"/reference/mta_light_rail_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_lines","text":"","code":"mta_light_rail_lines"},{"path":"/reference/mta_light_rail_lines.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_lines","text":"data frame 84 rows 8 variables: id integer COLUMN_DESCRIPTION rail_name character COLUMN_DESCRIPTION mode character COLUMN_DESCRIPTION tunnel character COLUMN_DESCRIPTION direction character COLUMN_DESCRIPTION miles double COLUMN_DESCRIPTION status character COLUMN_DESCRIPTION geometry list COLUMN_DESCRIPTION","code":""},{"path":"/reference/mta_light_rail_lines.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_lines","text":"Maryland Transit - Light Rail Lines (MD iMap)","code":""},{"path":"/reference/mta_light_rail_lines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_lines","text":"DETAILS","code":""},{"path":"/reference/mta_light_rail_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_stations","title":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_stations","text":"DATASET_DESCRIPTION","code":""},{"path":"/reference/mta_light_rail_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_stations","text":"","code":"mta_light_rail_stations"},{"path":"/reference/mta_light_rail_stations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_stations","text":"data frame 33 rows 11 variables: id integer COLUMN_DESCRIPTION name character COLUMN_DESCRIPTION address character COLUMN_DESCRIPTION city character COLUMN_DESCRIPTION state character COLUMN_DESCRIPTION zipcode integer COLUMN_DESCRIPTION mode character COLUMN_DESCRIPTION avg_wkdy integer COLUMN_DESCRIPTION avg_wknd character COLUMN_DESCRIPTION facility_type character COLUMN_DESCRIPTION geometry list COLUMN_DESCRIPTION","code":""},{"path":"/reference/mta_light_rail_stations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_stations","text":"Maryland Transit - Light RailLink Stations (MD iMap)","code":""},{"path":"/reference/mta_light_rail_stations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maryland Transit Administration (MTA) Light RailLink Stations — mta_light_rail_stations","text":"DETAILS","code":""},{"path":"/reference/mta_marc_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"MTA MARC Train Lines — mta_marc_lines","title":"MTA MARC Train Lines — mta_marc_lines","text":"DATASET_DESCRIPTION","code":""},{"path":"/reference/mta_marc_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MTA MARC Train Lines — mta_marc_lines","text":"","code":"mta_marc_lines"},{"path":"/reference/mta_marc_lines.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MTA MARC Train Lines — mta_marc_lines","text":"data frame 162 rows 8 variables: id integer COLUMN_DESCRIPTION rail_name character COLUMN_DESCRIPTION mode character COLUMN_DESCRIPTION tunnel character COLUMN_DESCRIPTION direction character COLUMN_DESCRIPTION miles double COLUMN_DESCRIPTION status character COLUMN_DESCRIPTION geometry list COLUMN_DESCRIPTION","code":""},{"path":"/reference/mta_marc_lines.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MTA MARC Train Lines — mta_marc_lines","text":"Maryland Transit - MARC Train Lines (MD iMap)","code":""},{"path":"/reference/mta_marc_lines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MTA MARC Train Lines — mta_marc_lines","text":"DETAILS","code":""},{"path":"/reference/mta_marc_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"MTA MARC Train Stations — mta_marc_stations","title":"MTA MARC Train Stations — mta_marc_stations","text":"DATASET_DESCRIPTION","code":""},{"path":"/reference/mta_marc_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MTA MARC Train Stations — mta_marc_stations","text":"","code":"mta_marc_stations"},{"path":"/reference/mta_marc_stations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MTA MARC Train Stations — mta_marc_stations","text":"data frame 44 rows 12 variables: id integer COLUMN_DESCRIPTION name character COLUMN_DESCRIPTION address character COLUMN_DESCRIPTION city character COLUMN_DESCRIPTION state character COLUMN_DESCRIPTION zipcode integer COLUMN_DESCRIPTION line_name character COLUMN_DESCRIPTION mode character COLUMN_DESCRIPTION avg_wkdy integer COLUMN_DESCRIPTION avg_wknd integer COLUMN_DESCRIPTION facility_type character COLUMN_DESCRIPTION geometry list COLUMN_DESCRIPTION","code":""},{"path":"/reference/mta_marc_stations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MTA MARC Train Stations — mta_marc_stations","text":"Maryland Transit - MARC Trains Stations (MD iMap)","code":""},{"path":"/reference/mta_marc_stations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MTA MARC Train Stations — mta_marc_stations","text":"DETAILS","code":""},{"path":"/reference/mta_subway_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Maryland Transit Administration (MTA) SubwayLink Metro Lines — mta_subway_lines","title":"Maryland Transit Administration (MTA) SubwayLink Metro Lines — mta_subway_lines","text":"DATASET_DESCRIPTION","code":""},{"path":"/reference/mta_subway_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maryland Transit Administration (MTA) SubwayLink Metro Lines — mta_subway_lines","text":"","code":"mta_subway_lines"},{"path":"/reference/mta_subway_lines.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Maryland Transit Administration (MTA) SubwayLink Metro Lines — mta_subway_lines","text":"data frame 34 rows 8 variables: id integer COLUMN_DESCRIPTION rail_name character COLUMN_DESCRIPTION mode character COLUMN_DESCRIPTION tunnel character COLUMN_DESCRIPTION direction character COLUMN_DESCRIPTION miles double COLUMN_DESCRIPTION status character COLUMN_DESCRIPTION geometry list COLUMN_DESCRIPTION","code":""},{"path":"/reference/mta_subway_lines.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maryland Transit Administration (MTA) SubwayLink Metro Lines — mta_subway_lines","text":"DETAILS","code":""},{"path":"/reference/mta_subway_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Maryland Transit Administration (MTA) SubwayLink Metro Stations — mta_subway_stations","title":"Maryland Transit Administration (MTA) SubwayLink Metro Stations — mta_subway_stations","text":"DATASET_DESCRIPTION","code":""},{"path":"/reference/mta_subway_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maryland Transit Administration (MTA) SubwayLink Metro Stations — mta_subway_stations","text":"","code":"mta_subway_stations"},{"path":"/reference/mta_subway_stations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Maryland Transit Administration (MTA) SubwayLink Metro Stations — mta_subway_stations","text":"data frame 14 rows 10 variables: id integer Station identification number name Station name address Station street address city City state State mode character COLUMN_DESCRIPTION avg_wkdy integer COLUMN_DESCRIPTION avg_wknd integer COLUMN_DESCRIPTION facility_type character COLUMN_DESCRIPTION geometry list COLUMN_DESCRIPTION","code":""},{"path":"/reference/mta_subway_stations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maryland Transit Administration (MTA) SubwayLink Metro Stations — mta_subway_stations","text":"DETAILS","code":""},{"path":"/reference/named_intersections.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore City street intersection names — named_intersections","title":"Baltimore City street intersection names — named_intersections","text":"Index Baltimore City intersections names streets   within 20 meters intersection boundaries.","code":""},{"path":"/reference/named_intersections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore City street intersection names — named_intersections","text":"","code":"named_intersections"},{"path":"/reference/named_intersections.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore City street intersection names — named_intersections","text":"data frame 11506 rows 3 variables: id Intersection identifier matching id `edge_of_pavement` data name Intersection name geometry Points center intersections","code":""},{"path":"/reference/neighborhoods.html","id":null,"dir":"Reference","previous_headings":"","what":"Neighborhood boundaries for Baltimore City — neighborhoods","title":"Neighborhood boundaries for Baltimore City — neighborhoods","text":"Baltimore City Neighborhoods Neighborhood Statistical Areas","code":""},{"path":"/reference/neighborhoods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighborhood boundaries for Baltimore City — neighborhoods","text":"","code":"neighborhoods"},{"path":"/reference/neighborhoods.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Neighborhood boundaries for Baltimore City — neighborhoods","text":"data frame 278 rows 2 variables: name Neighborhood name type Type area, options including residential, industrial area, park/open space, institutionl area business park) acres Area neighborhood (acres) osm_id Open Street Map (OSM) relation identifier wikidata Wikidata entity identifier geometry Multipolygons neighborhood boundary","code":""},{"path":"/reference/neighborhoods.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Neighborhood boundaries for Baltimore City — neighborhoods","text":"Maryland Baltimore City Neighborhoods (MD iMap)","code":""},{"path":"/reference/park_districts.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore Park Districts — park_districts","title":"Baltimore Park Districts — park_districts","text":"Park districts Baltimore City Department Recreation Parks.","code":""},{"path":"/reference/park_districts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore Park Districts — park_districts","text":"","code":"park_districts"},{"path":"/reference/park_districts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore Park Districts — park_districts","text":"data frame 5 rows 2 variables: name Park district name geometry Multipolygon geometry park district boundaries","code":""},{"path":"/reference/parks.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore City Parks — parks","title":"Baltimore City Parks — parks","text":"Spatial data parks Baltimore City Baltimore City Department Recreation Parks.","code":""},{"path":"/reference/parks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore City Parks — parks","text":"","code":"parks"},{"path":"/reference/parks.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore City Parks — parks","text":"data frame 297 rows 6 variables: name Park name id Identification number city data address Primary street address name_alt Alternate name operator Park operator, Baltimore City Department Recreation Parks (BCRP) park_district Park maintenance district BCRP acres Area park property (acres) geometry Multipolygon park edges","code":""},{"path":"/reference/parks.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Baltimore City Parks — parks","text":"https://services1.arcgis.com/UWYHeuuJISiGmgXx/ArcGIS/rest/services/Baltimore_City_Recreation_and_Parks/FeatureServer/2","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/planning_districts.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore City Planning Districts — planning_districts","title":"Baltimore City Planning Districts — planning_districts","text":"Administrative boundaries set Baltimore City Department Planning.","code":""},{"path":"/reference/planning_districts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore City Planning Districts — planning_districts","text":"","code":"planning_districts"},{"path":"/reference/planning_districts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore City Planning Districts — planning_districts","text":"data frame 11 rows 4 variables: id Planning district area identifier name Full name planning district abb Planning district area abbreviation geometry Multipolygon boundary planning district","code":""},{"path":"/reference/planning_districts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Baltimore City Planning Districts — planning_districts","text":"https://geodata.baltimorecity.gov/egis/rest/services/CityView/PlanningDistricts/MapServer/0","code":""},{"path":"/reference/police_districts.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore City Police Districts — police_districts","title":"Baltimore City Police Districts — police_districts","text":"Baltimore City Police Districts","code":""},{"path":"/reference/police_districts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore City Police Districts — police_districts","text":"","code":"police_districts"},{"path":"/reference/police_districts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore City Police Districts — police_districts","text":"data frame 9 rows 3 variables: number Police district number name Police district name geometry Multipolygons district boundary","code":""},{"path":"/reference/police_districts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Baltimore City Police Districts — police_districts","text":"https://geodata.baltimorecity.gov/egis/rest/services/Planning/Boundaries/MapServer/7","code":""},{"path":"/reference/request_types.html","id":null,"dir":"Reference","previous_headings":"","what":"311 Service Request Types for Baltimore City — request_types","title":"311 Service Request Types for Baltimore City — request_types","text":"list request types based unique request types used January 2019 October 2020.","code":""},{"path":"/reference/request_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"311 Service Request Types for Baltimore City — request_types","text":"","code":"request_types"},{"path":"/reference/request_types.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"311 Service Request Types for Baltimore City — request_types","text":"data frame 320 rows 1 variables: request_type Service request type","code":""},{"path":"/reference/request_types.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"311 Service Request Types for Baltimore City — request_types","text":"...","code":""},{"path":"/reference/set_map_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set map limits to area — set_map_limits","title":"Set map limits to area — set_map_limits","text":"Set map limits area optional buffer aspect ratio adjustment","code":""},{"path":"/reference/set_map_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set map limits to area — set_map_limits","text":"","code":"set_map_limits(   area = NULL,   bbox = NULL,   dist = NULL,   diag_ratio = NULL,   asp = NULL,   crs = pkgconfig::get_config(\"mapbaltimore.crs\", 2804),   expand = FALSE,   ... )"},{"path":"/reference/set_map_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set map limits to area — set_map_limits","text":"area sf object buffer /adjust. bbox bbox object buffer /adjust. area provided, bbox ignored. dist buffer distance meters. Optional. diag_ratio ratio set map extent based diagonal distance area's bounding box. Ignored dist provided. asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). crs Coordinate reference system use coord_sf(). Default `pkgconfig::get_config(\"mapbaltimore.crs\", 2804)` expand Default FALSE. TRUE, use scale_y_continuous scale_x_continuous expand map extent provided parameters. ... Additional parameters pass coord_sf().","code":""},{"path":"/reference/set_map_limits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set map limits to area — set_map_limits","text":"ggplot2::coord_sf() function xlim ylim parameters","code":""},{"path":"/reference/set_map_limits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set map limits to area — set_map_limits","text":"Set limits map bounding box area using coord_sf(). Optionally, adjust area size applying buffer /adjust aspect ratio limiting bounding box match set aspect ratio.","code":""},{"path":[]},{"path":"/reference/set_map_limits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set map limits to area — set_map_limits","text":"","code":"# Show detailed city boundary with map focused on area of Fell's Point (with 50m buffer) library(ggplot2)  ggplot() +    geom_sf(data = baltimore_city_detailed) +    set_map_limits(area = get_area(\"neighborhood\", \"Fells Point\"), dist = 50)"},{"path":"/reference/set_map_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set default map theme — set_map_theme","title":"Set default map theme — set_map_theme","text":"Set map theme using theme_set default geom_label using update_geom_defaults. Optionally hides axis text labels.","code":""},{"path":"/reference/set_map_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set default map theme — set_map_theme","text":"","code":"set_map_theme(map_theme = NULL, show_axis = FALSE)"},{"path":"/reference/set_map_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set default map theme — set_map_theme","text":"map_theme ggplot2 theme. Optional. Defaults theme_minimal show_axis Logical. TRUE, keep theme axis formatting. FALSE, hide panel grid, axis title, axis text.","code":""},{"path":"/reference/streets.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore City Street Center lines — streets","title":"Baltimore City Street Center lines — streets","text":"...","code":""},{"path":"/reference/streets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore City Street Center lines — streets","text":"","code":"streets"},{"path":"/reference/streets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore City Street Center lines — streets","text":"Simple feature collection 48,473 features 23 fields. type ... subtype ... subtype_label ... dirpre ... feanme ... featype ... dirsuf ... fraddl ... toaddl ... fraddr ... toaddr ... fraddla ... toaddla ... fraddra ... toaddra ... leftzip ... rightzip ... fullname ... sha_class ... sha_class_label ... blocktext ... block_num ... geometry ...","code":""},{"path":"/reference/streets.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Baltimore City Street Center lines — streets","text":"https://dotgis.baltimorecity.gov/arcgis/rest/services/DOT_Map_Services/DOT_Basemap/MapServer/7","code":""},{"path":"/reference/wards_1797_1918.html","id":null,"dir":"Reference","previous_headings":"","what":"Historic Ward Boundaries, 1797-1918 for Baltimore City — wards_1797_1918","title":"Historic Ward Boundaries, 1797-1918 for Baltimore City — wards_1797_1918","text":"Historic ward boundary data 1797 1918. Derived KML data provided Baltimore City Archives.","code":""},{"path":"/reference/wards_1797_1918.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Historic Ward Boundaries, 1797-1918 for Baltimore City — wards_1797_1918","text":"","code":"wards_1797_1918"},{"path":"/reference/wards_1797_1918.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Historic Ward Boundaries, 1797-1918 for Baltimore City — wards_1797_1918","text":"data frame 245 rows 4 variables: year Earliest effective year ward boundary name Ward name number Ward number geometry Multipolygons ward boundary year","code":""},{"path":"/reference/wards_1797_1918.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Historic Ward Boundaries, 1797-1918 for Baltimore City — wards_1797_1918","text":"https://msa.maryland.gov/bca/wards/index.html","code":""},{"path":"/reference/xwalk_block2tract.html","id":null,"dir":"Reference","previous_headings":"","what":"U.S. Census Block-to-Tract Crosswalk with 2010 Block Household Population — xwalk_block2tract","title":"U.S. Census Block-to-Tract Crosswalk with 2010 Block Household Population — xwalk_block2tract","text":"Used generate xwalk_neighborhood2tract.","code":""},{"path":"/reference/xwalk_block2tract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.S. Census Block-to-Tract Crosswalk with 2010 Block Household Population — xwalk_block2tract","text":"","code":"xwalk_block2tract"},{"path":"/reference/xwalk_block2tract.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.S. Census Block-to-Tract Crosswalk with 2010 Block Household Population — xwalk_block2tract","text":"data frame 13598 rows 3 variables: block Block GeoID tract Tract GeoID households Block household population","code":""},{"path":"/reference/xwalk_csa2nsa.html","id":null,"dir":"Reference","previous_headings":"","what":"Community Statistical Area (CSA)-to-Neighborhood Statistical Area (NSA) Crosswalk — xwalk_csa2nsa","title":"Community Statistical Area (CSA)-to-Neighborhood Statistical Area (NSA) Crosswalk — xwalk_csa2nsa","text":"crosswalk match Community Statistical Areas   Neighborhood Statistical Areas. Neighborhood Statistical Area name   neighborhood name provided, NSA name matching   crosswalk file provided BNIA-JFI neighborhood name matching   neighborhoods data included mapbaltimore package. NSA boundaries   may overlap several CSAs. 50   particular community assigned community. NSAs   files assigned one community.","code":""},{"path":"/reference/xwalk_csa2nsa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Community Statistical Area (CSA)-to-Neighborhood Statistical Area (NSA) Crosswalk — xwalk_csa2nsa","text":"","code":"xwalk_csa2nsa"},{"path":"/reference/xwalk_csa2nsa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Community Statistical Area (CSA)-to-Neighborhood Statistical Area (NSA) Crosswalk — xwalk_csa2nsa","text":"data frame 278 rows 4 variables: id Community Statistical Area id number csa Community Statistical Area name nsa Neighborhood Statistical Area name neighborhood Neighborhood name","code":""},{"path":"/reference/xwalk_csa2nsa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Community Statistical Area (CSA)-to-Neighborhood Statistical Area (NSA) Crosswalk — xwalk_csa2nsa","text":"https://bniajfi.org/mapping-resources/","code":""},{"path":"/reference/xwalk_neighborhood2tract.html","id":null,"dir":"Reference","previous_headings":"","what":"Neighborhood-to-U.S. Census Tract Crosswalk — xwalk_neighborhood2tract","title":"Neighborhood-to-U.S. Census Tract Crosswalk — xwalk_neighborhood2tract","text":"Share total households based proportion U.S.   Census tract population within named neighborhood based overlapping   U.S. Census Block groups.","code":""},{"path":"/reference/xwalk_neighborhood2tract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Neighborhood-to-U.S. Census Tract Crosswalk — xwalk_neighborhood2tract","text":"","code":"xwalk_neighborhood2tract"},{"path":"/reference/xwalk_neighborhood2tract.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Neighborhood-to-U.S. Census Tract Crosswalk — xwalk_neighborhood2tract","text":"data frame 551 rows 4 variables: name Neighborhood name geoid GeoID U.S. Census tract tract Tract number weight_households Share total households neighborhood U.S. Census tract (based 2010 decennial Census). Variable code \"H013001\". weight_units Share occupied housing units neighborhood U.S. Census tract (based 2020 decennial Census PL-94171 redistricting data). Variable code \"H1_002N\".","code":""},{"path":"/reference/xwalk_zip2csa.html","id":null,"dir":"Reference","previous_headings":"","what":"Zipcode-to-Community Statistical Area (NSA) Crosswalk — xwalk_zip2csa","title":"Zipcode-to-Community Statistical Area (NSA) Crosswalk — xwalk_zip2csa","text":"crosswalk match zipcodes Community Statistical Areas.","code":""},{"path":"/reference/xwalk_zip2csa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zipcode-to-Community Statistical Area (NSA) Crosswalk — xwalk_zip2csa","text":"","code":"xwalk_zip2csa"},{"path":"/reference/xwalk_zip2csa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Zipcode-to-Community Statistical Area (NSA) Crosswalk — xwalk_zip2csa","text":"data frame 119 rows 3 variables: zip Zipcode csa Community Statistical Area name id Community Statistical Area id number","code":""},{"path":"/reference/xwalk_zip2csa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Zipcode-to-Community Statistical Area (NSA) Crosswalk — xwalk_zip2csa","text":"https://bniajfi.org/mapping-resources/","code":""},{"path":"/reference/zoning.html","id":null,"dir":"Reference","previous_headings":"","what":"Baltimore City Zoning Code — zoning","title":"Baltimore City Zoning Code — zoning","text":"Baltimore City Zoning Code administered Baltimore City Department Housing Community Development (HCD) Office Zoning Administrator. office supports Board Municipal Zoning Appeals (BMZA).","code":""},{"path":"/reference/zoning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baltimore City Zoning Code — zoning","text":"","code":"zoning"},{"path":"/reference/zoning.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Baltimore City Zoning Code — zoning","text":"data frame 2,406 rows 4 variables: zoning Zoning designation code overlay Overlay zone designation label Label combining zoning overlay zoning codes category_zoning Zoning code category name_zoning Zoning code name category_overlay Overlay code category name_overlay Overlay zoning name geometry Multipolygons areas shared zoning","code":""},{"path":"/reference/zoning.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Baltimore City Zoning Code — zoning","text":"https://geodata.baltimorecity.gov/egis/rest/services/Planning/Boundaries_and_Plans/MapServer/20","code":""},{"path":"/news/index.html","id":"mapbaltimore-0109001-2022-01-10","dir":"Changelog","previous_headings":"","what":"mapbaltimore 0.1.0.9001 (2022-01-10)","title":"mapbaltimore 0.1.0.9001 (2022-01-10)","text":"docs: Update pkgdown site use Bootstrap 5 feat: Update neighborhoods include osm_id column + use “Institutional area” type value fix: Replace hard-coded CRS map_area_zoning fix: Update get_area_requests support 2022 requests work w/ modified column names","code":""},{"path":"/news/index.html","id":"mapbaltimore-0109000-2022-01-10","dir":"Changelog","previous_headings":"","what":"mapbaltimore 0.1.0.9000 (2022-01-10)","title":"mapbaltimore 0.1.0.9000 (2022-01-10)","text":"docs: Set-NEWS.md begin version tracking","code":""}]
