% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_data_batch.R
\name{get_data_batch}
\alias{get_data_batch}
\title{Batch load or save data for an area, street, or intersection}
\usage{
get_data_batch(
  get_type = c("area", "street", "intersection", "other"),
  other_area = NULL,
  label = get_type,
  bbox_adj = list(dist = 15, diag_ratio = NULL, asp = "6:4"),
  fn = NULL,
  area_batch = c("neighborhood", "council district", "csa", "tract"),
  data_batch = c("streets", "parks", "zoning", "hmt_2017", "mta_bus_lines",
    "mta_bus_stops", "trees", "vegetated_area", "unimproved_property"),
  trim = FALSE,
  load = FALSE,
  save = TRUE,
  save_dns = "geojson",
  ...
)
}
\arguments{
\item{get_type}{Type of geography to use in setting the area of data to load
or save, Default: c("area", "street", "intersection", "other")}

\item{other_area}{A custom sf object to use instead of getting an area,
street, or intersection. Only used if get_type is set to "other".}

\item{label}{Label to use for the loaded objects or saved files, Defaults to
the same as the get_type parameter.}

\item{bbox_adj}{Named list with parameters used by adjust_bbox() to create a
bounding box for the area, street, or intersection. Set to NULL if to use
the area as is (or to use another sf object with the other_area parameter)
Default: list(dist = 15, diag_ratio = NULL, asp = "6:4").}

\item{fn}{Function to apply to area after returning it. Useful for applying a
buffer to a street or creating a walking distance isochrone to use as the
bounding box for an intersection.}

\item{area_batch}{Type(s) of area intersecting with the bounding box to
return. The areas returned are not cropped or trimmed. Default:
c("neighborhood", "council district", "csa", "tract")}

\item{data_batch}{Data in bounding box. All spatial  datasets included with
the mapbaltimore package and any values supported by the extdata parameter
of get_area_data() are supported. "osm_buildings" is a special supported
parameter that calls get_area_osm_buildings() to return all building
footprints in the bounding box. Default: c("streets", "parks", "zoning",
"hmt_2017", "mta_bus_lines", "mta_bus_stops", "trees", "vegetated_area",
"unimproved_property")}

\item{trim}{If TRUE (and if bbox_adj is NULL), trim the data to the area,
street, or intersection.}

\item{load}{If TRUE, load the selected areas and datasets to the environment,
Default: FALSE}

\item{save}{If TRUE, save the selected areas and datasets locally as a file
(using the save_dns parameter as a file extension)., Default: TRUE}

\item{save_dns}{File extension supported by `sf::write_sf()`, Default:
'geojson'}

\item{...}{Parameters passed to get_area(), get_street(), or
get_intersection() depending on the value of the get_type parameter.}
}
\description{
This batch loading/saving function is less flexible than
  get_area_data() can reduce the need for repetitive calls to get_area_data()
  when gathering area-level data for mapping.
}
\examples{
\dontrun{
if(interactive()){
# Load council districts and streets for the Harwood neighborhood
 get_data_batch(
  get_type = "area",
  label = "harwood",
  type = "neighborhood",
  area_name = "Harwood",
  area_batch = c("council district", "planning district"),
  data_batch = c("streets"),
  load = TRUE,
  save = FALSE)

 # Save neighborhoods, parks, trees, and vegetated area w/in 800 meters
 # of the intersection of E. Pratt and Light Sts. to GeoJSON files
 get_data_batch(
  get_type = "intersection",
  street_names = "E PRATT ST & LIGHT ST",
  bbox_adj = list(dist = 0, diag_ratio = NULL, asp = "1:1")
  dist = 800
  area_batch = c("neighborhood"),
  data_batch = c("parks", "trees", "vegetated_area")
 )
 }
}
}
